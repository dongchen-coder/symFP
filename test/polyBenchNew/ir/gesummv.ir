; ModuleID = '/Users/dongchen/tools/llvm-4.0.0.src/lib/Transforms/SymFP/test/polyBenchNew/bc/gesummv.bc'
source_filename = "/Users/dongchen/tools/llvm-4.0.0.src/lib/Transforms/SymFP/test/polyBenchNew/src/gesummv.c"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.12.0"

; Function Attrs: noinline nounwind ssp uwtable
define void @gesummv(i32 %n, double %alpha, double %beta, double* %A, double* %B, double* %tmp, double* %x, double* %y) #0 {
entry:
  %n.addr = alloca i32, align 4
  %alpha.addr = alloca double, align 8
  %beta.addr = alloca double, align 8
  %A.addr = alloca double*, align 8
  %B.addr = alloca double*, align 8
  %tmp.addr = alloca double*, align 8
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  store double %alpha, double* %alpha.addr, align 8
  store double %beta, double* %beta.addr, align 8
  store double* %A, double** %A.addr, align 8
  store double* %B, double** %B.addr, align 8
  store double* %tmp, double** %tmp.addr, align 8
  store double* %x, double** %x.addr, align 8
  store double* %y, double** %y.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc39, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 1024
  br i1 %cmp, label %for.body, label %for.end41

for.body:                                         ; preds = %for.cond
  %1 = load double*, double** %tmp.addr, align 8
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds double, double* %1, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  %3 = load double*, double** %y.addr, align 8
  %4 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %4 to i64
  %arrayidx4 = getelementptr inbounds double, double* %3, i64 %idxprom3
  store double 0.000000e+00, double* %arrayidx4, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4
  %cmp6 = icmp slt i32 %5, 1024
  br i1 %cmp6, label %for.body7, label %for.end

for.body7:                                        ; preds = %for.cond5
  %6 = load double*, double** %A.addr, align 8
  %7 = load i32, i32* %i, align 4
  %mul = mul nsw i32 %7, 1024
  %8 = load i32, i32* %j, align 4
  %add = add nsw i32 %mul, %8
  %idxprom8 = sext i32 %add to i64
  %arrayidx9 = getelementptr inbounds double, double* %6, i64 %idxprom8
  %9 = load double, double* %arrayidx9, align 8
  %10 = load double*, double** %x.addr, align 8
  %11 = load i32, i32* %j, align 4
  %idxprom10 = sext i32 %11 to i64
  %arrayidx11 = getelementptr inbounds double, double* %10, i64 %idxprom10
  %12 = load double, double* %arrayidx11, align 8
  %mul12 = fmul double %9, %12
  %13 = load double*, double** %tmp.addr, align 8
  %14 = load i32, i32* %i, align 4
  %idxprom13 = sext i32 %14 to i64
  %arrayidx14 = getelementptr inbounds double, double* %13, i64 %idxprom13
  %15 = load double, double* %arrayidx14, align 8
  %add15 = fadd double %mul12, %15
  %16 = load double*, double** %tmp.addr, align 8
  %17 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %17 to i64
  %arrayidx17 = getelementptr inbounds double, double* %16, i64 %idxprom16
  store double %add15, double* %arrayidx17, align 8
  %18 = load double*, double** %B.addr, align 8
  %19 = load i32, i32* %i, align 4
  %mul18 = mul nsw i32 %19, 1024
  %20 = load i32, i32* %j, align 4
  %add19 = add nsw i32 %mul18, %20
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds double, double* %18, i64 %idxprom20
  %21 = load double, double* %arrayidx21, align 8
  %22 = load double*, double** %x.addr, align 8
  %23 = load i32, i32* %j, align 4
  %idxprom22 = sext i32 %23 to i64
  %arrayidx23 = getelementptr inbounds double, double* %22, i64 %idxprom22
  %24 = load double, double* %arrayidx23, align 8
  %mul24 = fmul double %21, %24
  %25 = load double*, double** %y.addr, align 8
  %26 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %26 to i64
  %arrayidx26 = getelementptr inbounds double, double* %25, i64 %idxprom25
  %27 = load double, double* %arrayidx26, align 8
  %add27 = fadd double %mul24, %27
  %28 = load double*, double** %y.addr, align 8
  %29 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %29 to i64
  %arrayidx29 = getelementptr inbounds double, double* %28, i64 %idxprom28
  store double %add27, double* %arrayidx29, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body7
  %30 = load i32, i32* %j, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond5

for.end:                                          ; preds = %for.cond5
  %31 = load double, double* %alpha.addr, align 8
  %32 = load double*, double** %tmp.addr, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %33 to i64
  %arrayidx31 = getelementptr inbounds double, double* %32, i64 %idxprom30
  %34 = load double, double* %arrayidx31, align 8
  %mul32 = fmul double %31, %34
  %35 = load double, double* %beta.addr, align 8
  %36 = load double*, double** %y.addr, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom33 = sext i32 %37 to i64
  %arrayidx34 = getelementptr inbounds double, double* %36, i64 %idxprom33
  %38 = load double, double* %arrayidx34, align 8
  %mul35 = fmul double %35, %38
  %add36 = fadd double %mul32, %mul35
  %39 = load double*, double** %y.addr, align 8
  %40 = load i32, i32* %i, align 4
  %idxprom37 = sext i32 %40 to i64
  %arrayidx38 = getelementptr inbounds double, double* %39, i64 %idxprom37
  store double %add36, double* %arrayidx38, align 8
  br label %for.inc39

for.inc39:                                        ; preds = %for.end
  %41 = load i32, i32* %i, align 4
  %inc40 = add nsw i32 %41, 1
  store i32 %inc40, i32* %i, align 4
  br label %for.cond

for.end41:                                        ; preds = %for.cond
  ret void
}

attributes #0 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"PIC Level", i32 2}
!1 = !{!"clang version 4.0.0 (tags/RELEASE_400/final)"}
