
Start to analysis array index
Array index info
A.addr ((1024 * j) + i)
u1.addr i
v1.addr j
u2.addr i
v2.addr j
A.addr ((1024 * j) + i)
x.addr i
A.addr ((1024 * i) + j)
y.addr j
x.addr i
x.addr i
z.addr i
x.addr i
w.addr i
A.addr ((1024 * j) + i)
x.addr j
w.addr i

Start to analyze argument
i32 %n
double %alpha
double %beta
double* %A
double* %u1
double* %v1
double* %u2
double* %v2
double* %w
double* %x
double* %y
double* %z

Start to analysis global variable

Start analysis loops

Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc20<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>


Loop at depth 1 containing: %for.cond23<header><exiting>,%for.body25,%for.cond26,%for.end44,%for.inc45<latch>,%for.body28,%for.inc42
    Loop at depth 2 containing: %for.cond26<header><exiting>,%for.body28,%for.inc42<latch>


Loop at depth 1 containing: %for.cond48<header><exiting>,%for.body50,%for.inc58<latch>


Loop at depth 1 containing: %for.cond61<header><exiting>,%for.body63,%for.cond64,%for.end82,%for.inc83<latch>,%for.body66,%for.inc80
    Loop at depth 2 containing: %for.cond64<header><exiting>,%for.body66,%for.inc80<latch>

Start to dump loop tree
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
----j
----Loop Bound: (0, 1024)
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
----j
----Loop Bound: (0, 1024)
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
----j
----Loop Bound: (0, 1024)

 start to analysis Ref
not Last level loop
--Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc20<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>
entry
for.cond
for.body
for.cond1
for.body3
for.inc
for.end
for.inc20
for.end22
for.cond23
for.body25
for.cond26
for.body28
for.inc42
for.end44
for.inc45
for.end47
for.cond48
for.body50
for.inc58
for.end60
for.cond61
for.body63
for.cond64
for.body66
for.inc80
for.end82
for.inc83
for.end85

 start to analysis Ref
not Last level loop
Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end,%for.inc20<latch>,%for.body3,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>
--Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.inc<latch>
for.cond
for.body
for.cond1
for.body3
for.inc
for.end
for.inc20

 start to analysis Ref
Last level loop

 start to analysis Ref
not Last level loop
Loop at depth 1 containing: %for.cond23<header><exiting>,%for.body25,%for.cond26,%for.end44,%for.inc45<latch>,%for.body28,%for.inc42
    Loop at depth 2 containing: %for.cond26<header><exiting>,%for.body28,%for.inc42<latch>
--Loop at depth 2 containing: %for.cond26<header><exiting>,%for.body28,%for.inc42<latch>
for.cond23
for.body25
for.cond26
for.body28
for.inc42
for.end44
for.inc45

 start to analysis Ref
Last level loop

 start to analysis Ref
Last level loop

 start to analysis Ref
not Last level loop
Loop at depth 1 containing: %for.cond61<header><exiting>,%for.body63,%for.cond64,%for.end82,%for.inc83<latch>,%for.body66,%for.inc80
    Loop at depth 2 containing: %for.cond64<header><exiting>,%for.body66,%for.inc80<latch>
--Loop at depth 2 containing: %for.cond64<header><exiting>,%for.body66,%for.inc80<latch>
for.cond61
for.body63
for.cond64
for.body66
for.inc80
for.end82
for.inc83

 start to analysis Ref
Last level loop
Start to dump loop tree
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
----j
----Loop Bound: (0, 1024)
Start to dump loop tree
------array access   %5 = load double, double* %arrayidx, align 8
Start to dump loop tree
------array access   %8 = load double, double* %arrayidx5, align 8
Start to dump loop tree
------array access   %11 = load double, double* %arrayidx7, align 8
Start to dump loop tree
------array access   %14 = load double, double* %arrayidx11, align 8
Start to dump loop tree
------array access   %17 = load double, double* %arrayidx13, align 8
Start to dump loop tree
------array access   store double %add15, double* %arrayidx19, align 8
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
----j
----Loop Bound: (0, 1024)
Start to dump loop tree
------array access   %27 = load double, double* %arrayidx30, align 8
Start to dump loop tree
------array access   %32 = load double, double* %arrayidx34, align 8
Start to dump loop tree
------array access   %35 = load double, double* %arrayidx37, align 8
Start to dump loop tree
------array access   store double %add39, double* %arrayidx41, align 8
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
----array access   %43 = load double, double* %arrayidx52, align 8
Start to dump loop tree
----array access   %46 = load double, double* %arrayidx54, align 8
Start to dump loop tree
----array access   store double %add55, double* %arrayidx57, align 8
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
----j
----Loop Bound: (0, 1024)
Start to dump loop tree
------array access   %54 = load double, double* %arrayidx68, align 8
Start to dump loop tree
------array access   %59 = load double, double* %arrayidx72, align 8
Start to dump loop tree
------array access   %62 = load double, double* %arrayidx75, align 8
Start to dump loop tree
------array access   store double %add77, double* %arrayidx79, align 8

Finish analysis loops
Start to analyze function: gemver
