
Start to analysis array index
Array index info
tmp.addr i
y.addr i
tmp.addr i
A.addr ((1024 * j) + i)
x.addr j
tmp.addr i
y.addr j
A.addr ((1024 * j) + i)
tmp.addr i
y.addr j

Start to analyze argument
i32 %nx
i32 %ny
double* %A
double* %x
double* %y
double* %tmp

Start to analysis global variable

Start analysis loops
--i
--Loop Bound: (0, 1024)
----array access   store double 0.000000e+00, double* %arrayidx, align 8
--i
--Loop Bound: (0, 1024)
----array access   store double 0.000000e+00, double* %arrayidx7, align 8
----j
----Loop Bound: (0, 1024)
------array access   %10 = load double, double* %arrayidx12, align 8
------array access   %14 = load double, double* %arrayidx14, align 8
------array access   %17 = load double, double* %arrayidx16, align 8
------array access   store double %add18, double* %arrayidx20, align 8
----j
----Loop Bound: (0, 1024)
------array access   %24 = load double, double* %arrayidx28, align 8
------array access   %28 = load double, double* %arrayidx32, align 8
------array access   %31 = load double, double* %arrayidx34, align 8
------array access   store double %add36, double* %arrayidx38, align 8

Finish analysis loops
Start to analyze function: atax_cpu
