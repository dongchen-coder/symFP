
Start to analysis array index
Array index info
tmp.addr i
y.addr i
tmp.addr i
A.addr ((1024 * j) + i)
x.addr j
tmp.addr i
y.addr j
A.addr ((1024 * j) + i)
tmp.addr i
y.addr j

Start to analyze argument
i32 %nx
i32 %ny
double* %A
double* %x
double* %y
double* %tmp

Start to analysis global variable

Start analysis loops

Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>


Loop at depth 1 containing: %for.cond3<header><exiting>,%for.body5,%for.cond8,%for.end23,%for.cond24,%for.end41,%for.inc42<latch>,%for.body26,%for.inc39,%for.body10,%for.inc21
    Loop at depth 2 containing: %for.cond8<header><exiting>,%for.body10,%for.inc21<latch>
    Loop at depth 2 containing: %for.cond24<header><exiting>,%for.body26,%for.inc39<latch>

Start to dump loop tree
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
----j
----Loop Bound: (0, 1024)
Start to dump loop tree
----j
----Loop Bound: (0, 1024)

 start to analysis Ref
not Last level loop
--Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.inc<latch>
entry
for.cond
for.body
for.inc
for.end
for.cond3
for.body5
for.cond8
for.body10
for.inc21
for.end23
for.cond24
for.body26
for.inc39
for.end41
for.inc42
for.end44

 start to analysis Ref
Last level loop

 start to analysis Ref
not Last level loop
Loop at depth 1 containing: %for.cond3<header><exiting>,%for.body5,%for.cond8,%for.end23,%for.cond24,%for.end41,%for.inc42<latch>,%for.body26,%for.inc39,%for.body10,%for.inc21
    Loop at depth 2 containing: %for.cond8<header><exiting>,%for.body10,%for.inc21<latch>
    Loop at depth 2 containing: %for.cond24<header><exiting>,%for.body26,%for.inc39<latch>
--Loop at depth 2 containing: %for.cond8<header><exiting>,%for.body10,%for.inc21<latch>
for.cond3
for.body5
for.cond8
for.body10
for.inc21
for.end23
for.cond24
for.body26
for.inc39
for.end41
for.inc42

 start to analysis Ref
Last level loop

 start to analysis Ref
Last level loop
Start to dump loop tree
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
----array access   store double 0.000000e+00, double* %arrayidx, align 8
Start to dump loop tree
--i
--Loop Bound: (0, 1024)
Start to dump loop tree
----array access   store double 0.000000e+00, double* %arrayidx7, align 8
Start to dump loop tree
----j
----Loop Bound: (0, 1024)
Start to dump loop tree
------array access   %10 = load double, double* %arrayidx12, align 8
Start to dump loop tree
------array access   %14 = load double, double* %arrayidx14, align 8
Start to dump loop tree
------array access   %17 = load double, double* %arrayidx16, align 8
Start to dump loop tree
------array access   store double %add18, double* %arrayidx20, align 8
Start to dump loop tree
----j
----Loop Bound: (0, 1024)
Start to dump loop tree
------array access   %24 = load double, double* %arrayidx28, align 8
Start to dump loop tree
------array access   %28 = load double, double* %arrayidx32, align 8
Start to dump loop tree
------array access   %31 = load double, double* %arrayidx34, align 8
Start to dump loop tree
------array access   store double %add36, double* %arrayidx38, align 8

Finish analysis loops
Start to analyze function: atax_cpu
