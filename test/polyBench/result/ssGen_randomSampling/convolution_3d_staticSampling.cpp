
 /* Start to analysis array index
Array index info
A.addr (((((i - 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1))
A.addr (((((i + 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1))
A.addr (((((i - 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1))
A.addr (((((i + 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1))
A.addr (((((i - 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1))
A.addr (((((i + 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1))
A.addr (((((i + 0) * 256) * 256) + ((j - 1) * 256)) + (k + 0))
A.addr (((((i + 0) * 256) * 256) + ((j + 0) * 256)) + (k + 0))
A.addr (((((i + 0) * 256) * 256) + ((j + 1) * 256)) + (k + 0))
A.addr (((((i - 1) * 256) * 256) + ((j - 1) * 256)) + (k + 1))
A.addr (((((i + 1) * 256) * 256) + ((j - 1) * 256)) + (k + 1))
A.addr (((((i - 1) * 256) * 256) + ((j + 0) * 256)) + (k + 1))
A.addr (((((i + 1) * 256) * 256) + ((j + 0) * 256)) + (k + 1))
A.addr (((((i - 1) * 256) * 256) + ((j + 1) * 256)) + (k + 1))
A.addr (((((i + 1) * 256) * 256) + ((j + 1) * 256)) + (k + 1))
B.addr ((((i * 256) * 256) + (j * 256)) + k)

 Finish to analysis array index */ 

 /* Start to analyze argument
i32 %ni
i32 %nj
i32 %nk
double* %A
double* %B

 Start to analysis argument */ 

 /* Start to analysis global variable 

 Finish to analysis global variable */ 

 /* Start analysis loops
--i
--Loop Bound: (1, 255)
----j
----Loop Bound: (1, 255)
------k
------Loop Bound: (1, 255)
--------array access   %8 = load double, double* %arrayidx, align 8
--------array access   %14 = load double, double* %arrayidx22, align 8
--------array access   %20 = load double, double* %arrayidx34, align 8
--------array access   %26 = load double, double* %arrayidx46, align 8
--------array access   %32 = load double, double* %arrayidx58, align 8
--------array access   %38 = load double, double* %arrayidx70, align 8
--------array access   %44 = load double, double* %arrayidx82, align 8
--------array access   %50 = load double, double* %arrayidx94, align 8
--------array access   %56 = load double, double* %arrayidx106, align 8
--------array access   %62 = load double, double* %arrayidx118, align 8
--------array access   %68 = load double, double* %arrayidx130, align 8
--------array access   %74 = load double, double* %arrayidx142, align 8
--------array access   %80 = load double, double* %arrayidx154, align 8
--------array access   %86 = load double, double* %arrayidx166, align 8
--------array access   %92 = load double, double* %arrayidx178, align 8
--------array access   store double %add180, double* %arrayidx187, align 8

Finish analysis loops */ 
 // Start to generating Static Sampling Code
#include <map>
#include <set>
#include <cstdlib>
#include <iostream>
using namespace std;
std::map<uint64_t, double> RT;
std::map<uint64_t, double> MR;
void rtHistoCal( int rt) {
    if (RT.find(rt) == RT.end()) { 
        RT[rt] = 1;
    } else {
        RT[rt] += 1;
    }
    return;
}
void RTtoMR_AET() {
    std::map<uint64_t, double> P;
    double total_num_RT = 0;
    uint64_t max_RT = 0;
    for (std::map<uint64_t, double>::reverse_iterator it = RT.rbegin(), eit = RT.rend(); it != eit; ++it) {
        total_num_RT += it->second;
        if (max_RT < it->first) {
            max_RT = it->first;
        }
    }
    double accumulate_num_RT = 0;
    for (std::map<uint64_t, double>::reverse_iterator it = RT.rbegin(), eit = RT.rend(); it != eit; ++it) {
        P[it->first] = accumulate_num_RT / total_num_RT;
        accumulate_num_RT += it->second;
    }
    P[0] = 1;
    double sum_P = 0;
    uint64_t t = 0;
    uint64_t prev_t = 0;
    for (uint64_t c = 0; c <= max_RT; c++) {
        while (sum_P < c && t <= max_RT) {
            if (P.find(t) != P.end()) {
                sum_P += P[t];
                prev_t = t;
            } else {
                sum_P += P[prev_t];
            }
            t++;
        }
        MR[c] = P[prev_t];
    }
    return;
}
int calAddrA_addr0( int i, int j, int k) {
    int result = (((((i - 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1));
    return result;
}
int calAddrA_addr1( int i, int j, int k) {
    int result = (((((i + 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1));
    return result;
}
int calAddrA_addr2( int i, int j, int k) {
    int result = (((((i - 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1));
    return result;
}
int calAddrA_addr3( int i, int j, int k) {
    int result = (((((i + 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1));
    return result;
}
int calAddrA_addr4( int i, int j, int k) {
    int result = (((((i - 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1));
    return result;
}
int calAddrA_addr5( int i, int j, int k) {
    int result = (((((i + 1) * 256) * 256) + ((j - 1) * 256)) + (k - 1));
    return result;
}
int calAddrA_addr6( int i, int j, int k) {
    int result = (((((i + 0) * 256) * 256) + ((j - 1) * 256)) + (k + 0));
    return result;
}
int calAddrA_addr7( int i, int j, int k) {
    int result = (((((i + 0) * 256) * 256) + ((j + 0) * 256)) + (k + 0));
    return result;
}
int calAddrA_addr8( int i, int j, int k) {
    int result = (((((i + 0) * 256) * 256) + ((j + 1) * 256)) + (k + 0));
    return result;
}
int calAddrA_addr9( int i, int j, int k) {
    int result = (((((i - 1) * 256) * 256) + ((j - 1) * 256)) + (k + 1));
    return result;
}
int calAddrA_addr10( int i, int j, int k) {
    int result = (((((i + 1) * 256) * 256) + ((j - 1) * 256)) + (k + 1));
    return result;
}
int calAddrA_addr11( int i, int j, int k) {
    int result = (((((i - 1) * 256) * 256) + ((j + 0) * 256)) + (k + 1));
    return result;
}
int calAddrA_addr12( int i, int j, int k) {
    int result = (((((i + 1) * 256) * 256) + ((j + 0) * 256)) + (k + 1));
    return result;
}
int calAddrA_addr13( int i, int j, int k) {
    int result = (((((i - 1) * 256) * 256) + ((j + 1) * 256)) + (k + 1));
    return result;
}
int calAddrA_addr14( int i, int j, int k) {
    int result = (((((i + 1) * 256) * 256) + ((j + 1) * 256)) + (k + 1));
    return result;
}
int calAddrB_addr0( int i, int j, int k) {
    int result = ((((i * 256) * 256) + (j * 256)) + k);
    return result;
}
int rtCalA_addr0_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 0;
}
int rtCalA_addr0_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 0;
}
int rtCalA_addr0_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 0;
}
int rtCalA_addr0_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 0;
}
int rtCalA_addr0_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 0;
}
int rtCalA_addr0_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 0;
}
int rtCalA_addr0_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 0;
}
int rtCalA_addr0_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 0;
}
int rtCalA_addr0_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 0;
}
int rtCalA_addr0_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 0;
}
int rtCalA_addr0_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 0;
}
int rtCalA_addr0_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 0;
}
int rtCalA_addr0_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 0;
}
int rtCalA_addr0_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 0;
}
int rtCalA_addr0_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 0;
}
int rtCalA_addr1_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 1;
}
int rtCalA_addr1_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 1;
}
int rtCalA_addr1_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 1;
}
int rtCalA_addr1_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 1;
}
int rtCalA_addr1_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 1;
}
int rtCalA_addr1_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 1;
}
int rtCalA_addr1_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 1;
}
int rtCalA_addr1_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 1;
}
int rtCalA_addr1_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 1;
}
int rtCalA_addr1_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 1;
}
int rtCalA_addr1_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 1;
}
int rtCalA_addr1_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 1;
}
int rtCalA_addr1_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 1;
}
int rtCalA_addr1_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 1;
}
int rtCalA_addr1_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 1;
}
int rtCalA_addr2_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 2;
}
int rtCalA_addr2_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 2;
}
int rtCalA_addr2_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 2;
}
int rtCalA_addr2_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 2;
}
int rtCalA_addr2_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 2;
}
int rtCalA_addr2_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 2;
}
int rtCalA_addr2_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 2;
}
int rtCalA_addr2_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 2;
}
int rtCalA_addr2_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 2;
}
int rtCalA_addr2_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 2;
}
int rtCalA_addr2_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 2;
}
int rtCalA_addr2_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 2;
}
int rtCalA_addr2_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 2;
}
int rtCalA_addr2_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 2;
}
int rtCalA_addr2_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 2;
}
int rtCalA_addr3_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 3;
}
int rtCalA_addr3_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 3;
}
int rtCalA_addr3_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 3;
}
int rtCalA_addr3_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 3;
}
int rtCalA_addr3_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 3;
}
int rtCalA_addr3_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 3;
}
int rtCalA_addr3_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 3;
}
int rtCalA_addr3_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 3;
}
int rtCalA_addr3_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 3;
}
int rtCalA_addr3_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 3;
}
int rtCalA_addr3_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 3;
}
int rtCalA_addr3_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 3;
}
int rtCalA_addr3_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 3;
}
int rtCalA_addr3_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 3;
}
int rtCalA_addr3_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 3;
}
int rtCalA_addr4_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 4;
}
int rtCalA_addr4_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 4;
}
int rtCalA_addr4_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 4;
}
int rtCalA_addr4_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 4;
}
int rtCalA_addr4_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 4;
}
int rtCalA_addr4_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 4;
}
int rtCalA_addr4_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 4;
}
int rtCalA_addr4_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 4;
}
int rtCalA_addr4_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 4;
}
int rtCalA_addr4_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 4;
}
int rtCalA_addr4_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 4;
}
int rtCalA_addr4_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 4;
}
int rtCalA_addr4_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 4;
}
int rtCalA_addr4_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 4;
}
int rtCalA_addr4_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 4;
}
int rtCalA_addr5_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 5;
}
int rtCalA_addr5_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 5;
}
int rtCalA_addr5_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 5;
}
int rtCalA_addr5_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 5;
}
int rtCalA_addr5_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 5;
}
int rtCalA_addr5_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 5;
}
int rtCalA_addr5_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 5;
}
int rtCalA_addr5_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 5;
}
int rtCalA_addr5_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 5;
}
int rtCalA_addr5_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 5;
}
int rtCalA_addr5_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 5;
}
int rtCalA_addr5_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 5;
}
int rtCalA_addr5_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 5;
}
int rtCalA_addr5_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 5;
}
int rtCalA_addr5_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 5;
}
int rtCalA_addr6_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 6;
}
int rtCalA_addr6_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 6;
}
int rtCalA_addr6_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 6;
}
int rtCalA_addr6_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 6;
}
int rtCalA_addr6_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 6;
}
int rtCalA_addr6_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 6;
}
int rtCalA_addr6_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 6;
}
int rtCalA_addr6_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 6;
}
int rtCalA_addr6_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 6;
}
int rtCalA_addr6_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 6;
}
int rtCalA_addr6_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 6;
}
int rtCalA_addr6_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 6;
}
int rtCalA_addr6_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 6;
}
int rtCalA_addr6_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 6;
}
int rtCalA_addr6_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 6;
}
int rtCalA_addr7_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 7;
}
int rtCalA_addr7_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 7;
}
int rtCalA_addr7_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 7;
}
int rtCalA_addr7_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 7;
}
int rtCalA_addr7_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 7;
}
int rtCalA_addr7_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 7;
}
int rtCalA_addr7_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 7;
}
int rtCalA_addr7_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 7;
}
int rtCalA_addr7_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 7;
}
int rtCalA_addr7_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 7;
}
int rtCalA_addr7_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 7;
}
int rtCalA_addr7_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 7;
}
int rtCalA_addr7_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 7;
}
int rtCalA_addr7_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 7;
}
int rtCalA_addr7_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 7;
}
int rtCalA_addr8_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 8;
}
int rtCalA_addr8_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 8;
}
int rtCalA_addr8_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 8;
}
int rtCalA_addr8_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 8;
}
int rtCalA_addr8_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 8;
}
int rtCalA_addr8_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 8;
}
int rtCalA_addr8_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 8;
}
int rtCalA_addr8_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 8;
}
int rtCalA_addr8_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 8;
}
int rtCalA_addr8_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 8;
}
int rtCalA_addr8_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 8;
}
int rtCalA_addr8_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 8;
}
int rtCalA_addr8_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 8;
}
int rtCalA_addr8_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 8;
}
int rtCalA_addr8_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 8;
}
int rtCalA_addr9_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 9;
}
int rtCalA_addr9_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 9;
}
int rtCalA_addr9_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 9;
}
int rtCalA_addr9_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 9;
}
int rtCalA_addr9_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 9;
}
int rtCalA_addr9_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 9;
}
int rtCalA_addr9_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 9;
}
int rtCalA_addr9_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 9;
}
int rtCalA_addr9_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 9;
}
int rtCalA_addr9_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 9;
}
int rtCalA_addr9_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 9;
}
int rtCalA_addr9_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 9;
}
int rtCalA_addr9_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 9;
}
int rtCalA_addr9_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 9;
}
int rtCalA_addr9_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 9;
}
int rtCalA_addr10_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 10;
}
int rtCalA_addr10_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 10;
}
int rtCalA_addr10_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 10;
}
int rtCalA_addr10_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 10;
}
int rtCalA_addr10_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 10;
}
int rtCalA_addr10_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 10;
}
int rtCalA_addr10_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 10;
}
int rtCalA_addr10_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 10;
}
int rtCalA_addr10_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 10;
}
int rtCalA_addr10_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 10;
}
int rtCalA_addr10_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 10;
}
int rtCalA_addr10_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 10;
}
int rtCalA_addr10_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 10;
}
int rtCalA_addr10_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 10;
}
int rtCalA_addr10_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 10;
}
int rtCalA_addr11_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 11;
}
int rtCalA_addr11_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 11;
}
int rtCalA_addr11_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 11;
}
int rtCalA_addr11_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 11;
}
int rtCalA_addr11_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 11;
}
int rtCalA_addr11_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 11;
}
int rtCalA_addr11_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 11;
}
int rtCalA_addr11_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 11;
}
int rtCalA_addr11_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 11;
}
int rtCalA_addr11_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 11;
}
int rtCalA_addr11_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 11;
}
int rtCalA_addr11_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 11;
}
int rtCalA_addr11_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 11;
}
int rtCalA_addr11_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 11;
}
int rtCalA_addr11_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 11;
}
int rtCalA_addr12_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 12;
}
int rtCalA_addr12_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 12;
}
int rtCalA_addr12_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 12;
}
int rtCalA_addr12_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 12;
}
int rtCalA_addr12_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 12;
}
int rtCalA_addr12_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 12;
}
int rtCalA_addr12_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 12;
}
int rtCalA_addr12_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 12;
}
int rtCalA_addr12_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 12;
}
int rtCalA_addr12_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 12;
}
int rtCalA_addr12_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 12;
}
int rtCalA_addr12_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 12;
}
int rtCalA_addr12_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 12;
}
int rtCalA_addr12_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 12;
}
int rtCalA_addr12_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 12;
}
int rtCalA_addr13_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 13;
}
int rtCalA_addr13_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 13;
}
int rtCalA_addr13_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 13;
}
int rtCalA_addr13_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 13;
}
int rtCalA_addr13_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 13;
}
int rtCalA_addr13_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 13;
}
int rtCalA_addr13_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 13;
}
int rtCalA_addr13_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 13;
}
int rtCalA_addr13_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 13;
}
int rtCalA_addr13_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 13;
}
int rtCalA_addr13_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 13;
}
int rtCalA_addr13_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 13;
}
int rtCalA_addr13_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 13;
}
int rtCalA_addr13_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 13;
}
int rtCalA_addr13_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 13;
}
int rtCalA_addr14_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 0 - 14;
}
int rtCalA_addr14_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 1 - 14;
}
int rtCalA_addr14_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 2 - 14;
}
int rtCalA_addr14_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 3 - 14;
}
int rtCalA_addr14_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 4 - 14;
}
int rtCalA_addr14_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 5 - 14;
}
int rtCalA_addr14_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 6 - 14;
}
int rtCalA_addr14_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 7 - 14;
}
int rtCalA_addr14_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 8 - 14;
}
int rtCalA_addr14_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 9 - 14;
}
int rtCalA_addr14_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 10 - 14;
}
int rtCalA_addr14_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 11 - 14;
}
int rtCalA_addr14_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 12 - 14;
}
int rtCalA_addr14_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 13 - 14;
}
int rtCalA_addr14_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 14 - 14;
}
int rtCalB_addr0_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) {
    return (ireuse - i) * 1032256 + (jreuse - j) * 4064 + (kreuse - k) * 16 + 15 - 15;
}
bool checkIntervenA_addr0_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr0_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr0(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr1_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr1(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr2_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr2(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr3_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr3(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr4_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr4(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr5_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr5(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr6_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr6(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr7_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr7(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr8_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr8(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr9_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr9(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr10_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr10(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr11_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr11(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr12_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr12(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr13_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr13(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_1(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_2(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_3(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_4(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_5(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_6(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_7(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_8(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_9(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_10(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_11(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_12(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_13(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse - 1 ;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr14(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenA_addr14_14(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr0(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr1(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr2(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr3(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr4(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr5(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr6(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr7(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr8(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr9(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr10(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr11(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr12(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    for(int iInterven = i; iInterven <= ireuse; iInterven++) {
        int jInterven;
        int jIntervenUB;
        if (iInterven == i) {
            jInterven = j;
        } else {
            jInterven = 1;
        }
        if (iInterven == ireuse) {
            jIntervenUB = jreuse;
        } else {
            jIntervenUB = 255- 1;
        }
        for(; jInterven <= jIntervenUB; jInterven++) {
            int kInterven;
            int kIntervenUB;
            if (iInterven == i && jInterven == j) {
                kInterven = k + 1 ;
            } else {
                kInterven = 1;
            }
            if (iInterven == ireuse && jInterven == jreuse) {
                kIntervenUB = kreuse;
            } else {
                kIntervenUB = 255- 1;
            }
            for(; kInterven <= kIntervenUB; kInterven++) {
                if( calAddrA_addr13(iInterven, jInterven, kInterven) == calAddrA_addr14(i, j, k)) {
                    return true;
                }
            }
        }
    }
    return false;
}
bool checkIntervenB_addr0_0(int i, int j, int k, int ireuse, int jreuse, int kreuse) { 
    return false;
}
void pairA_addr0_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr0_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr0(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr0_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr0_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr1_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr1(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr1_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr1_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr2_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr2(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr2_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr2_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr3_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr3(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr3_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr3_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr4_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr4(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr4_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr4_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr5_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr5(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr5_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr5_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr6_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr6(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr6_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr6_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr7_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr7(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr7_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr7_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr8_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr8(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr8_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr8_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr9_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr9(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr9_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr9_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr10_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr10(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr10_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr10_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr11_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr11(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr11_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr11_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr12_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr12(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr12_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr12_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr13_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr13(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr13_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr13_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_1() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr1(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_1(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_1(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_2() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr2(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_2(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_2(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_3() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr3(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_3(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_3(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_4() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr4(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_4(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_4(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_5() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr5(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_5(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_5(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_6() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr6(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_6(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_6(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_7() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr7(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_7(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_7(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_8() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr8(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_8(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_8(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_9() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr9(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_9(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_9(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_10() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr10(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_10(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_10(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_11() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr11(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_11(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_11(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_12() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr12(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_12(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_12(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_13() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr13(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_13(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_13(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairA_addr14_14() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrA_addr14(i, j, k) == calAddrA_addr14(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenA_addr14_14(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalA_addr14_14(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void pairB_addr0_0() {
    set<string> record;
    for ( int s = 0; s < 10000; s++) {
        int i = rand() % (255 - 1) + 1;
        int j = rand() % (255 - 1) + 1;
        int k = rand() % (255 - 1) + 1;
        string idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        while ( record.find(idx_string) != record.end() ) {
            i = rand() % (255 - 1) + 1;
            j = rand() % (255 - 1) + 1;
            k = rand() % (255 - 1) + 1;
            idx_string = std::to_string(i) + "_" + std::to_string(j) + "_" + std::to_string(k) + "_" ;
        }
        record.insert( idx_string );
        bool findReuseFlag = false;
        for ( int ireuse = i; ireuse < 255; ireuse++) {
            int jreuse;
            if (ireuse == i) {
                jreuse = j;
            } else {
                jreuse = 1;
            }
            for ( ; jreuse < 255; jreuse++) {
                int kreuse;
                if (ireuse == i && jreuse == j) {
                    kreuse = k + 1;
                } else {
                    kreuse = 1;
                }
                for ( ; kreuse < 255; kreuse++) {
                            if ( calAddrB_addr0(i, j, k) == calAddrB_addr0(ireuse, jreuse, kreuse) ) {
                                if ( checkIntervenB_addr0_0(i, j, k, ireuse, jreuse, kreuse) == false) {
                                  rtHistoCal(  rtCalB_addr0_0(i, j, k, ireuse, jreuse, kreuse) );
                                }
                                findReuseFlag = true;
                            }
                            if (findReuseFlag == true) {
                                break;
                            }
                        }
                        if (findReuseFlag == true) {
                            break;
                        }
                    }
                    if (findReuseFlag == true) {
                        break;
                    }
                }
            }
}
void rtDump() {
    cout << "Start to dump reuse time histogram\n";
    for (map<uint64_t, double>::iterator it = RT.begin(), eit = RT.end(); it != eit; ++it) {
        cout << it->first << " " << it->second << "\n";
    }
    return;
}
void dumpMR() {
    cout << "miss ratio" << endl;
    std::map<uint64_t, double>::iterator it1 = MR.begin();
    std::map<uint64_t, double>::iterator it2 = MR.begin();
    while(it1 != MR.end()) {
        while(1) {
            std::map<uint64_t, double>::iterator it3 = it2;
            ++it3;
            if (it3 == MR.end()) {
                break;
            }
            if (it1->second - it3->second < 0.00001) {
                ++it2;
            } else {
                break;
            }
        }
        cout << it1->first << " " << it1->second << endl;
        if (it1 != it2) {
            cout << it2->first << " " << it2->second << endl;
        }
        it1 = ++it2;
        it2 = it1;
    }
    return;
}
int main() {
    pairA_addr0_0();
    pairA_addr0_1();
    pairA_addr0_2();
    pairA_addr0_3();
    pairA_addr0_4();
    pairA_addr0_5();
    pairA_addr0_6();
    pairA_addr0_7();
    pairA_addr0_8();
    pairA_addr0_9();
    pairA_addr0_10();
    pairA_addr0_11();
    pairA_addr0_12();
    pairA_addr0_13();
    pairA_addr0_14();
    pairA_addr1_0();
    pairA_addr1_1();
    pairA_addr1_2();
    pairA_addr1_3();
    pairA_addr1_4();
    pairA_addr1_5();
    pairA_addr1_6();
    pairA_addr1_7();
    pairA_addr1_8();
    pairA_addr1_9();
    pairA_addr1_10();
    pairA_addr1_11();
    pairA_addr1_12();
    pairA_addr1_13();
    pairA_addr1_14();
    pairA_addr2_0();
    pairA_addr2_1();
    pairA_addr2_2();
    pairA_addr2_3();
    pairA_addr2_4();
    pairA_addr2_5();
    pairA_addr2_6();
    pairA_addr2_7();
    pairA_addr2_8();
    pairA_addr2_9();
    pairA_addr2_10();
    pairA_addr2_11();
    pairA_addr2_12();
    pairA_addr2_13();
    pairA_addr2_14();
    pairA_addr3_0();
    pairA_addr3_1();
    pairA_addr3_2();
    pairA_addr3_3();
    pairA_addr3_4();
    pairA_addr3_5();
    pairA_addr3_6();
    pairA_addr3_7();
    pairA_addr3_8();
    pairA_addr3_9();
    pairA_addr3_10();
    pairA_addr3_11();
    pairA_addr3_12();
    pairA_addr3_13();
    pairA_addr3_14();
    pairA_addr4_0();
    pairA_addr4_1();
    pairA_addr4_2();
    pairA_addr4_3();
    pairA_addr4_4();
    pairA_addr4_5();
    pairA_addr4_6();
    pairA_addr4_7();
    pairA_addr4_8();
    pairA_addr4_9();
    pairA_addr4_10();
    pairA_addr4_11();
    pairA_addr4_12();
    pairA_addr4_13();
    pairA_addr4_14();
    pairA_addr5_0();
    pairA_addr5_1();
    pairA_addr5_2();
    pairA_addr5_3();
    pairA_addr5_4();
    pairA_addr5_5();
    pairA_addr5_6();
    pairA_addr5_7();
    pairA_addr5_8();
    pairA_addr5_9();
    pairA_addr5_10();
    pairA_addr5_11();
    pairA_addr5_12();
    pairA_addr5_13();
    pairA_addr5_14();
    pairA_addr6_0();
    pairA_addr6_1();
    pairA_addr6_2();
    pairA_addr6_3();
    pairA_addr6_4();
    pairA_addr6_5();
    pairA_addr6_6();
    pairA_addr6_7();
    pairA_addr6_8();
    pairA_addr6_9();
    pairA_addr6_10();
    pairA_addr6_11();
    pairA_addr6_12();
    pairA_addr6_13();
    pairA_addr6_14();
    pairA_addr7_0();
    pairA_addr7_1();
    pairA_addr7_2();
    pairA_addr7_3();
    pairA_addr7_4();
    pairA_addr7_5();
    pairA_addr7_6();
    pairA_addr7_7();
    pairA_addr7_8();
    pairA_addr7_9();
    pairA_addr7_10();
    pairA_addr7_11();
    pairA_addr7_12();
    pairA_addr7_13();
    pairA_addr7_14();
    pairA_addr8_0();
    pairA_addr8_1();
    pairA_addr8_2();
    pairA_addr8_3();
    pairA_addr8_4();
    pairA_addr8_5();
    pairA_addr8_6();
    pairA_addr8_7();
    pairA_addr8_8();
    pairA_addr8_9();
    pairA_addr8_10();
    pairA_addr8_11();
    pairA_addr8_12();
    pairA_addr8_13();
    pairA_addr8_14();
    pairA_addr9_0();
    pairA_addr9_1();
    pairA_addr9_2();
    pairA_addr9_3();
    pairA_addr9_4();
    pairA_addr9_5();
    pairA_addr9_6();
    pairA_addr9_7();
    pairA_addr9_8();
    pairA_addr9_9();
    pairA_addr9_10();
    pairA_addr9_11();
    pairA_addr9_12();
    pairA_addr9_13();
    pairA_addr9_14();
    pairA_addr10_0();
    pairA_addr10_1();
    pairA_addr10_2();
    pairA_addr10_3();
    pairA_addr10_4();
    pairA_addr10_5();
    pairA_addr10_6();
    pairA_addr10_7();
    pairA_addr10_8();
    pairA_addr10_9();
    pairA_addr10_10();
    pairA_addr10_11();
    pairA_addr10_12();
    pairA_addr10_13();
    pairA_addr10_14();
    pairA_addr11_0();
    pairA_addr11_1();
    pairA_addr11_2();
    pairA_addr11_3();
    pairA_addr11_4();
    pairA_addr11_5();
    pairA_addr11_6();
    pairA_addr11_7();
    pairA_addr11_8();
    pairA_addr11_9();
    pairA_addr11_10();
    pairA_addr11_11();
    pairA_addr11_12();
    pairA_addr11_13();
    pairA_addr11_14();
    pairA_addr12_0();
    pairA_addr12_1();
    pairA_addr12_2();
    pairA_addr12_3();
    pairA_addr12_4();
    pairA_addr12_5();
    pairA_addr12_6();
    pairA_addr12_7();
    pairA_addr12_8();
    pairA_addr12_9();
    pairA_addr12_10();
    pairA_addr12_11();
    pairA_addr12_12();
    pairA_addr12_13();
    pairA_addr12_14();
    pairA_addr13_0();
    pairA_addr13_1();
    pairA_addr13_2();
    pairA_addr13_3();
    pairA_addr13_4();
    pairA_addr13_5();
    pairA_addr13_6();
    pairA_addr13_7();
    pairA_addr13_8();
    pairA_addr13_9();
    pairA_addr13_10();
    pairA_addr13_11();
    pairA_addr13_12();
    pairA_addr13_13();
    pairA_addr13_14();
    pairA_addr14_0();
    pairA_addr14_1();
    pairA_addr14_2();
    pairA_addr14_3();
    pairA_addr14_4();
    pairA_addr14_5();
    pairA_addr14_6();
    pairA_addr14_7();
    pairA_addr14_8();
    pairA_addr14_9();
    pairA_addr14_10();
    pairA_addr14_11();
    pairA_addr14_12();
    pairA_addr14_13();
    pairA_addr14_14();
    pairB_addr0_0();
    rtDump();
    RTtoMR_AET();    dumpMR();    return 0;
}
 /* Start to analyze function:  
conv3D */ 
