
Start to analysis array index
Array index info
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((0 + (1024 * (1024 * (1024 * (1 - k))))) + (0 + j)) + i)
A.addr (((0 + (1024 * (1024 * (1024 * (0 + k))))) + (0 + j)) + i)
A.addr (((0 + (1024 * (1024 * (1024 * (1 + k))))) + (0 + j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (0 + k))))) + (1 - j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (0 + k))))) + (1 + j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 + k))))) + (1 - j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 + k))))) + (1 + j)) + i)
B.addr (((1024 * (1024 * k)) + (1024 * j)) + i)

Start to analyze argument
i32 %ni
i32 %nj
i32 %nk
double* %A
double* %B

Start to analysis global variable

Start analysis loops
--i
--Loop Bound: (1, 1023)
----j
----Loop Bound: (1, 1023)
------k
------Loop Bound: (1, 1023)
--------array access   %8 = load double, double* %arrayidx, align 8
--------array access   %14 = load double, double* %arrayidx22, align 8
--------array access   %20 = load double, double* %arrayidx34, align 8
--------array access   %26 = load double, double* %arrayidx46, align 8
--------array access   %32 = load double, double* %arrayidx58, align 8
--------array access   %38 = load double, double* %arrayidx70, align 8
--------array access   %44 = load double, double* %arrayidx82, align 8
--------array access   %50 = load double, double* %arrayidx94, align 8
--------array access   %56 = load double, double* %arrayidx106, align 8
--------array access   %62 = load double, double* %arrayidx118, align 8
--------array access   %68 = load double, double* %arrayidx130, align 8
--------array access   %74 = load double, double* %arrayidx142, align 8
--------array access   %80 = load double, double* %arrayidx154, align 8
--------array access   %86 = load double, double* %arrayidx166, align 8
--------array access   %92 = load double, double* %arrayidx178, align 8
--------array access   store double %add180, double* %arrayidx187, align 8

Finish analysis loops
Start to analyze function: conv3D
