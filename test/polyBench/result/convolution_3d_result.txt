
Start to analysis array index
Array index info
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((0 + (1024 * (1024 * (1024 * (1 - k))))) + (0 + j)) + i)
A.addr (((0 + (1024 * (1024 * (1024 * (0 + k))))) + (0 + j)) + i)
A.addr (((0 + (1024 * (1024 * (1024 * (1 + k))))) + (0 + j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (0 + k))))) + (1 - j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (0 + k))))) + (1 + j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 + k))))) + (1 - j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 + k))))) + (1 + j)) + i)
B.addr (((1024 * (1024 * k)) + (1024 * j)) + i)

Start to analyze argument
i32 %ni
i32 %nj
i32 %nk
double* %A
double* %B

Start to analysis global variable

Start analysis loops

Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end190,%for.inc191<latch>,%for.body3,%for.cond4,%for.end,%for.inc188,%for.body6,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.cond4,%for.end,%for.inc188<latch>,%for.body6,%for.inc
        Loop at depth 3 containing: %for.cond4<header><exiting>,%for.body6,%for.inc<latch>

Start to dump loop tree
Start to dump loop tree
--i
--Loop Bound: (1, 1023)
Start to dump loop tree
----j
----Loop Bound: (1, 1023)
Start to dump loop tree
------k
------Loop Bound: (1, 1023)

 start to analysis Ref
not Last level loop
--Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end190,%for.inc191<latch>,%for.body3,%for.cond4,%for.end,%for.inc188,%for.body6,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.cond4,%for.end,%for.inc188<latch>,%for.body6,%for.inc
        Loop at depth 3 containing: %for.cond4<header><exiting>,%for.body6,%for.inc<latch>
entry
for.cond
for.body
for.cond1
for.body3
for.cond4
for.body6
for.inc
for.end
for.inc188
for.end190
for.inc191
for.end193

 start to analysis Ref
not Last level loop
Loop at depth 1 containing: %for.cond<header><exiting>,%for.body,%for.cond1,%for.end190,%for.inc191<latch>,%for.body3,%for.cond4,%for.end,%for.inc188,%for.body6,%for.inc
    Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.cond4,%for.end,%for.inc188<latch>,%for.body6,%for.inc
        Loop at depth 3 containing: %for.cond4<header><exiting>,%for.body6,%for.inc<latch>
--Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.cond4,%for.end,%for.inc188<latch>,%for.body6,%for.inc
    Loop at depth 3 containing: %for.cond4<header><exiting>,%for.body6,%for.inc<latch>
for.cond
for.body
for.cond1
for.body3
for.cond4
for.body6
for.inc
for.end
for.inc188
for.end190
for.inc191

 start to analysis Ref
not Last level loop
Loop at depth 2 containing: %for.cond1<header><exiting>,%for.body3,%for.cond4,%for.end,%for.inc188<latch>,%for.body6,%for.inc
    Loop at depth 3 containing: %for.cond4<header><exiting>,%for.body6,%for.inc<latch>
--Loop at depth 3 containing: %for.cond4<header><exiting>,%for.body6,%for.inc<latch>
for.cond1
for.body3
for.cond4
for.body6
for.inc
for.end
for.inc188

 start to analysis Ref
Last level loop
Start to dump loop tree
Start to dump loop tree
--i
--Loop Bound: (1, 1023)
Start to dump loop tree
----j
----Loop Bound: (1, 1023)
Start to dump loop tree
------k
------Loop Bound: (1, 1023)
Start to dump loop tree
--------array access   %8 = load double, double* %arrayidx, align 8
Start to dump loop tree
--------array access   %14 = load double, double* %arrayidx22, align 8
Start to dump loop tree
--------array access   %20 = load double, double* %arrayidx34, align 8
Start to dump loop tree
--------array access   %26 = load double, double* %arrayidx46, align 8
Start to dump loop tree
--------array access   %32 = load double, double* %arrayidx58, align 8
Start to dump loop tree
--------array access   %38 = load double, double* %arrayidx70, align 8
Start to dump loop tree
--------array access   %44 = load double, double* %arrayidx82, align 8
Start to dump loop tree
--------array access   %50 = load double, double* %arrayidx94, align 8
Start to dump loop tree
--------array access   %56 = load double, double* %arrayidx106, align 8
Start to dump loop tree
--------array access   %62 = load double, double* %arrayidx118, align 8
Start to dump loop tree
--------array access   %68 = load double, double* %arrayidx130, align 8
Start to dump loop tree
--------array access   %74 = load double, double* %arrayidx142, align 8
Start to dump loop tree
--------array access   %80 = load double, double* %arrayidx154, align 8
Start to dump loop tree
--------array access   %86 = load double, double* %arrayidx166, align 8
Start to dump loop tree
--------array access   %92 = load double, double* %arrayidx178, align 8
Start to dump loop tree
--------array access   store double %add180, double* %arrayidx187, align 8

Finish analysis loops
Start to analyze function: conv3D
