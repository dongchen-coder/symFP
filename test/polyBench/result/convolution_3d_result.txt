
Start to analysis array index
Array index info
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 - (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((0 + (1024 * (1024 * (1024 * (1 - k))))) + (0 + j)) + i)
A.addr (((0 + (1024 * (1024 * (1024 * (0 + k))))) + (0 + j)) + i)
A.addr (((0 + (1024 * (1024 * (1024 * (1 + k))))) + (0 + j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 - k))))) + (1 - j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 - k))))) + (1 + j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (0 + k))))) + (1 - j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (0 + k))))) + (1 + j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 + k))))) + (1 - j)) + i)
A.addr (((1 + (1024 * (1024 * (1024 * (1 + k))))) + (1 + j)) + i)
B.addr (((1024 * (1024 * k)) + (1024 * j)) + i)

Start to analyze argument
i32 %ni
i32 %nj
i32 %nk
double* %A
double* %B

Start to analysis global variable

Start analysis loops
--i
--Loop Bound: (1, 1023)
----j
----Loop Bound: (1, 1023)
------k
------Loop Bound: (1, 1023)

Finish analysis loops
Start to analyze function: conv3D
