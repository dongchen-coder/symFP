; ModuleID = './ss_bc/heat_3d.bc'
source_filename = "./ss_src/heat_3d.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define void @heat_3d(double* %B, double* %A) #0 {
entry:
  %B.addr = alloca double*, align 8
  %A.addr = alloca double*, align 8
  %t = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store double* %B, double** %B.addr, align 8
  store double* %A, double** %A.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc127, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 126
  br i1 %cmp, label %for.body, label %for.end129

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc124, %for.body
  %1 = load i32, i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 126
  br i1 %cmp2, label %for.body3, label %for.end126

for.body3:                                        ; preds = %for.cond1
  store i32 0, i32* %k, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc, %for.body3
  %2 = load i32, i32* %k, align 4
  %cmp5 = icmp slt i32 %2, 126
  br i1 %cmp5, label %for.body6, label %for.end

for.body6:                                        ; preds = %for.cond4
  %3 = load double*, double** %A.addr, align 8
  %4 = load i32, i32* %i, align 4
  %add = add nsw i32 %4, 2
  %mul = mul nsw i32 %add, 128
  %mul7 = mul nsw i32 %mul, 128
  %5 = load i32, i32* %j, align 4
  %add8 = add nsw i32 %5, 1
  %mul9 = mul nsw i32 %add8, 128
  %add10 = add nsw i32 %mul7, %mul9
  %6 = load i32, i32* %k, align 4
  %add11 = add nsw i32 %add10, %6
  %add12 = add nsw i32 %add11, 1
  %idxprom = sext i32 %add12 to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %7 = load double, double* %arrayidx, align 8
  %8 = load double*, double** %A.addr, align 8
  %9 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %9, 1
  %mul14 = mul nsw i32 %add13, 128
  %mul15 = mul nsw i32 %mul14, 128
  %10 = load i32, i32* %j, align 4
  %add16 = add nsw i32 %10, 1
  %mul17 = mul nsw i32 %add16, 128
  %add18 = add nsw i32 %mul15, %mul17
  %11 = load i32, i32* %k, align 4
  %add19 = add nsw i32 %add18, %11
  %add20 = add nsw i32 %add19, 1
  %idxprom21 = sext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds double, double* %8, i64 %idxprom21
  %12 = load double, double* %arrayidx22, align 8
  %mul23 = fmul double 2.000000e+00, %12
  %sub = fsub double %7, %mul23
  %13 = load double*, double** %A.addr, align 8
  %14 = load i32, i32* %i, align 4
  %mul24 = mul nsw i32 %14, 128
  %mul25 = mul nsw i32 %mul24, 128
  %15 = load i32, i32* %j, align 4
  %add26 = add nsw i32 %15, 1
  %mul27 = mul nsw i32 %add26, 128
  %add28 = add nsw i32 %mul25, %mul27
  %16 = load i32, i32* %k, align 4
  %add29 = add nsw i32 %add28, %16
  %add30 = add nsw i32 %add29, 1
  %idxprom31 = sext i32 %add30 to i64
  %arrayidx32 = getelementptr inbounds double, double* %13, i64 %idxprom31
  %17 = load double, double* %arrayidx32, align 8
  %add33 = fadd double %sub, %17
  %mul34 = fmul double 1.250000e-01, %add33
  %18 = load double*, double** %A.addr, align 8
  %19 = load i32, i32* %i, align 4
  %add35 = add nsw i32 %19, 1
  %mul36 = mul nsw i32 %add35, 128
  %mul37 = mul nsw i32 %mul36, 128
  %20 = load i32, i32* %j, align 4
  %add38 = add nsw i32 %20, 2
  %mul39 = mul nsw i32 %add38, 128
  %add40 = add nsw i32 %mul37, %mul39
  %21 = load i32, i32* %k, align 4
  %add41 = add nsw i32 %add40, %21
  %add42 = add nsw i32 %add41, 1
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds double, double* %18, i64 %idxprom43
  %22 = load double, double* %arrayidx44, align 8
  %23 = load double*, double** %A.addr, align 8
  %24 = load i32, i32* %i, align 4
  %add45 = add nsw i32 %24, 1
  %mul46 = mul nsw i32 %add45, 128
  %mul47 = mul nsw i32 %mul46, 128
  %25 = load i32, i32* %j, align 4
  %add48 = add nsw i32 %25, 1
  %mul49 = mul nsw i32 %add48, 128
  %add50 = add nsw i32 %mul47, %mul49
  %26 = load i32, i32* %k, align 4
  %add51 = add nsw i32 %add50, %26
  %add52 = add nsw i32 %add51, 1
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds double, double* %23, i64 %idxprom53
  %27 = load double, double* %arrayidx54, align 8
  %mul55 = fmul double 2.000000e+00, %27
  %sub56 = fsub double %22, %mul55
  %28 = load double*, double** %A.addr, align 8
  %29 = load i32, i32* %i, align 4
  %add57 = add nsw i32 %29, 1
  %mul58 = mul nsw i32 %add57, 128
  %mul59 = mul nsw i32 %mul58, 128
  %30 = load i32, i32* %j, align 4
  %mul60 = mul nsw i32 %30, 128
  %add61 = add nsw i32 %mul59, %mul60
  %31 = load i32, i32* %k, align 4
  %add62 = add nsw i32 %add61, %31
  %add63 = add nsw i32 %add62, 1
  %idxprom64 = sext i32 %add63 to i64
  %arrayidx65 = getelementptr inbounds double, double* %28, i64 %idxprom64
  %32 = load double, double* %arrayidx65, align 8
  %add66 = fadd double %sub56, %32
  %mul67 = fmul double 1.250000e-01, %add66
  %add68 = fadd double %mul34, %mul67
  %33 = load double*, double** %A.addr, align 8
  %34 = load i32, i32* %i, align 4
  %add69 = add nsw i32 %34, 1
  %mul70 = mul nsw i32 %add69, 128
  %mul71 = mul nsw i32 %mul70, 128
  %35 = load i32, i32* %j, align 4
  %add72 = add nsw i32 %35, 1
  %mul73 = mul nsw i32 %add72, 128
  %add74 = add nsw i32 %mul71, %mul73
  %36 = load i32, i32* %k, align 4
  %add75 = add nsw i32 %add74, %36
  %add76 = add nsw i32 %add75, 2
  %idxprom77 = sext i32 %add76 to i64
  %arrayidx78 = getelementptr inbounds double, double* %33, i64 %idxprom77
  %37 = load double, double* %arrayidx78, align 8
  %38 = load double*, double** %A.addr, align 8
  %39 = load i32, i32* %i, align 4
  %add79 = add nsw i32 %39, 1
  %mul80 = mul nsw i32 %add79, 128
  %mul81 = mul nsw i32 %mul80, 128
  %40 = load i32, i32* %j, align 4
  %add82 = add nsw i32 %40, 1
  %mul83 = mul nsw i32 %add82, 128
  %add84 = add nsw i32 %mul81, %mul83
  %41 = load i32, i32* %k, align 4
  %add85 = add nsw i32 %add84, %41
  %add86 = add nsw i32 %add85, 1
  %idxprom87 = sext i32 %add86 to i64
  %arrayidx88 = getelementptr inbounds double, double* %38, i64 %idxprom87
  %42 = load double, double* %arrayidx88, align 8
  %mul89 = fmul double 2.000000e+00, %42
  %sub90 = fsub double %37, %mul89
  %43 = load double*, double** %A.addr, align 8
  %44 = load i32, i32* %i, align 4
  %add91 = add nsw i32 %44, 1
  %mul92 = mul nsw i32 %add91, 128
  %mul93 = mul nsw i32 %mul92, 128
  %45 = load i32, i32* %j, align 4
  %add94 = add nsw i32 %45, 1
  %mul95 = mul nsw i32 %add94, 128
  %add96 = add nsw i32 %mul93, %mul95
  %46 = load i32, i32* %k, align 4
  %add97 = add nsw i32 %add96, %46
  %idxprom98 = sext i32 %add97 to i64
  %arrayidx99 = getelementptr inbounds double, double* %43, i64 %idxprom98
  %47 = load double, double* %arrayidx99, align 8
  %add100 = fadd double %sub90, %47
  %mul101 = fmul double 1.250000e-01, %add100
  %add102 = fadd double %add68, %mul101
  %48 = load double*, double** %A.addr, align 8
  %49 = load i32, i32* %i, align 4
  %add103 = add nsw i32 %49, 1
  %mul104 = mul nsw i32 %add103, 128
  %mul105 = mul nsw i32 %mul104, 128
  %50 = load i32, i32* %j, align 4
  %add106 = add nsw i32 %50, 1
  %mul107 = mul nsw i32 %add106, 128
  %add108 = add nsw i32 %mul105, %mul107
  %51 = load i32, i32* %k, align 4
  %add109 = add nsw i32 %add108, %51
  %add110 = add nsw i32 %add109, 1
  %idxprom111 = sext i32 %add110 to i64
  %arrayidx112 = getelementptr inbounds double, double* %48, i64 %idxprom111
  %52 = load double, double* %arrayidx112, align 8
  %add113 = fadd double %add102, %52
  %53 = load double*, double** %B.addr, align 8
  %54 = load i32, i32* %i, align 4
  %add114 = add nsw i32 %54, 1
  %mul115 = mul nsw i32 %add114, 128
  %mul116 = mul nsw i32 %mul115, 128
  %55 = load i32, i32* %j, align 4
  %add117 = add nsw i32 %55, 1
  %mul118 = mul nsw i32 %add117, 128
  %add119 = add nsw i32 %mul116, %mul118
  %56 = load i32, i32* %k, align 4
  %add120 = add nsw i32 %add119, %56
  %add121 = add nsw i32 %add120, 1
  %idxprom122 = sext i32 %add121 to i64
  %arrayidx123 = getelementptr inbounds double, double* %53, i64 %idxprom122
  store double %add113, double* %arrayidx123, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body6
  %57 = load i32, i32* %k, align 4
  %inc = add nsw i32 %57, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond4

for.end:                                          ; preds = %for.cond4
  br label %for.inc124

for.inc124:                                       ; preds = %for.end
  %58 = load i32, i32* %j, align 4
  %inc125 = add nsw i32 %58, 1
  store i32 %inc125, i32* %j, align 4
  br label %for.cond1

for.end126:                                       ; preds = %for.cond1
  br label %for.inc127

for.inc127:                                       ; preds = %for.end126
  %59 = load i32, i32* %i, align 4
  %inc128 = add nsw i32 %59, 1
  store i32 %inc128, i32* %i, align 4
  br label %for.cond

for.end129:                                       ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond130

for.cond130:                                      ; preds = %for.inc267, %for.end129
  %60 = load i32, i32* %i, align 4
  %cmp131 = icmp slt i32 %60, 126
  br i1 %cmp131, label %for.body132, label %for.end269

for.body132:                                      ; preds = %for.cond130
  store i32 0, i32* %j, align 4
  br label %for.cond133

for.cond133:                                      ; preds = %for.inc264, %for.body132
  %61 = load i32, i32* %j, align 4
  %cmp134 = icmp slt i32 %61, 126
  br i1 %cmp134, label %for.body135, label %for.end266

for.body135:                                      ; preds = %for.cond133
  store i32 0, i32* %k, align 4
  br label %for.cond136

for.cond136:                                      ; preds = %for.inc261, %for.body135
  %62 = load i32, i32* %k, align 4
  %cmp137 = icmp slt i32 %62, 126
  br i1 %cmp137, label %for.body138, label %for.end263

for.body138:                                      ; preds = %for.cond136
  %63 = load double*, double** %B.addr, align 8
  %64 = load i32, i32* %i, align 4
  %add139 = add nsw i32 %64, 2
  %mul140 = mul nsw i32 %add139, 128
  %mul141 = mul nsw i32 %mul140, 128
  %65 = load i32, i32* %j, align 4
  %add142 = add nsw i32 %65, 1
  %mul143 = mul nsw i32 %add142, 128
  %add144 = add nsw i32 %mul141, %mul143
  %66 = load i32, i32* %k, align 4
  %add145 = add nsw i32 %add144, %66
  %add146 = add nsw i32 %add145, 1
  %idxprom147 = sext i32 %add146 to i64
  %arrayidx148 = getelementptr inbounds double, double* %63, i64 %idxprom147
  %67 = load double, double* %arrayidx148, align 8
  %68 = load double*, double** %B.addr, align 8
  %69 = load i32, i32* %i, align 4
  %add149 = add nsw i32 %69, 1
  %mul150 = mul nsw i32 %add149, 128
  %mul151 = mul nsw i32 %mul150, 128
  %70 = load i32, i32* %j, align 4
  %add152 = add nsw i32 %70, 1
  %mul153 = mul nsw i32 %add152, 128
  %add154 = add nsw i32 %mul151, %mul153
  %71 = load i32, i32* %k, align 4
  %add155 = add nsw i32 %add154, %71
  %add156 = add nsw i32 %add155, 1
  %idxprom157 = sext i32 %add156 to i64
  %arrayidx158 = getelementptr inbounds double, double* %68, i64 %idxprom157
  %72 = load double, double* %arrayidx158, align 8
  %mul159 = fmul double 2.000000e+00, %72
  %sub160 = fsub double %67, %mul159
  %73 = load double*, double** %B.addr, align 8
  %74 = load i32, i32* %i, align 4
  %mul161 = mul nsw i32 %74, 128
  %mul162 = mul nsw i32 %mul161, 128
  %75 = load i32, i32* %j, align 4
  %add163 = add nsw i32 %75, 1
  %mul164 = mul nsw i32 %add163, 128
  %add165 = add nsw i32 %mul162, %mul164
  %76 = load i32, i32* %k, align 4
  %add166 = add nsw i32 %add165, %76
  %add167 = add nsw i32 %add166, 1
  %idxprom168 = sext i32 %add167 to i64
  %arrayidx169 = getelementptr inbounds double, double* %73, i64 %idxprom168
  %77 = load double, double* %arrayidx169, align 8
  %add170 = fadd double %sub160, %77
  %mul171 = fmul double 1.250000e-01, %add170
  %78 = load double*, double** %B.addr, align 8
  %79 = load i32, i32* %i, align 4
  %add172 = add nsw i32 %79, 1
  %mul173 = mul nsw i32 %add172, 128
  %mul174 = mul nsw i32 %mul173, 128
  %80 = load i32, i32* %j, align 4
  %add175 = add nsw i32 %80, 2
  %mul176 = mul nsw i32 %add175, 128
  %add177 = add nsw i32 %mul174, %mul176
  %81 = load i32, i32* %k, align 4
  %add178 = add nsw i32 %add177, %81
  %add179 = add nsw i32 %add178, 1
  %idxprom180 = sext i32 %add179 to i64
  %arrayidx181 = getelementptr inbounds double, double* %78, i64 %idxprom180
  %82 = load double, double* %arrayidx181, align 8
  %83 = load double*, double** %B.addr, align 8
  %84 = load i32, i32* %i, align 4
  %add182 = add nsw i32 %84, 1
  %mul183 = mul nsw i32 %add182, 128
  %mul184 = mul nsw i32 %mul183, 128
  %85 = load i32, i32* %j, align 4
  %add185 = add nsw i32 %85, 1
  %mul186 = mul nsw i32 %add185, 128
  %add187 = add nsw i32 %mul184, %mul186
  %86 = load i32, i32* %k, align 4
  %add188 = add nsw i32 %add187, %86
  %add189 = add nsw i32 %add188, 1
  %idxprom190 = sext i32 %add189 to i64
  %arrayidx191 = getelementptr inbounds double, double* %83, i64 %idxprom190
  %87 = load double, double* %arrayidx191, align 8
  %mul192 = fmul double 2.000000e+00, %87
  %sub193 = fsub double %82, %mul192
  %88 = load double*, double** %B.addr, align 8
  %89 = load i32, i32* %i, align 4
  %add194 = add nsw i32 %89, 1
  %mul195 = mul nsw i32 %add194, 128
  %mul196 = mul nsw i32 %mul195, 128
  %90 = load i32, i32* %j, align 4
  %mul197 = mul nsw i32 %90, 128
  %add198 = add nsw i32 %mul196, %mul197
  %91 = load i32, i32* %k, align 4
  %add199 = add nsw i32 %add198, %91
  %add200 = add nsw i32 %add199, 1
  %idxprom201 = sext i32 %add200 to i64
  %arrayidx202 = getelementptr inbounds double, double* %88, i64 %idxprom201
  %92 = load double, double* %arrayidx202, align 8
  %add203 = fadd double %sub193, %92
  %mul204 = fmul double 1.250000e-01, %add203
  %add205 = fadd double %mul171, %mul204
  %93 = load double*, double** %B.addr, align 8
  %94 = load i32, i32* %i, align 4
  %add206 = add nsw i32 %94, 1
  %mul207 = mul nsw i32 %add206, 128
  %mul208 = mul nsw i32 %mul207, 128
  %95 = load i32, i32* %j, align 4
  %add209 = add nsw i32 %95, 1
  %mul210 = mul nsw i32 %add209, 128
  %add211 = add nsw i32 %mul208, %mul210
  %96 = load i32, i32* %k, align 4
  %add212 = add nsw i32 %add211, %96
  %add213 = add nsw i32 %add212, 2
  %idxprom214 = sext i32 %add213 to i64
  %arrayidx215 = getelementptr inbounds double, double* %93, i64 %idxprom214
  %97 = load double, double* %arrayidx215, align 8
  %98 = load double*, double** %B.addr, align 8
  %99 = load i32, i32* %i, align 4
  %add216 = add nsw i32 %99, 1
  %mul217 = mul nsw i32 %add216, 128
  %mul218 = mul nsw i32 %mul217, 128
  %100 = load i32, i32* %j, align 4
  %add219 = add nsw i32 %100, 1
  %mul220 = mul nsw i32 %add219, 128
  %add221 = add nsw i32 %mul218, %mul220
  %101 = load i32, i32* %k, align 4
  %add222 = add nsw i32 %add221, %101
  %add223 = add nsw i32 %add222, 1
  %idxprom224 = sext i32 %add223 to i64
  %arrayidx225 = getelementptr inbounds double, double* %98, i64 %idxprom224
  %102 = load double, double* %arrayidx225, align 8
  %mul226 = fmul double 2.000000e+00, %102
  %sub227 = fsub double %97, %mul226
  %103 = load double*, double** %B.addr, align 8
  %104 = load i32, i32* %i, align 4
  %add228 = add nsw i32 %104, 1
  %mul229 = mul nsw i32 %add228, 128
  %mul230 = mul nsw i32 %mul229, 128
  %105 = load i32, i32* %j, align 4
  %add231 = add nsw i32 %105, 1
  %mul232 = mul nsw i32 %add231, 128
  %add233 = add nsw i32 %mul230, %mul232
  %106 = load i32, i32* %k, align 4
  %add234 = add nsw i32 %add233, %106
  %idxprom235 = sext i32 %add234 to i64
  %arrayidx236 = getelementptr inbounds double, double* %103, i64 %idxprom235
  %107 = load double, double* %arrayidx236, align 8
  %add237 = fadd double %sub227, %107
  %mul238 = fmul double 1.250000e-01, %add237
  %add239 = fadd double %add205, %mul238
  %108 = load double*, double** %B.addr, align 8
  %109 = load i32, i32* %i, align 4
  %add240 = add nsw i32 %109, 1
  %mul241 = mul nsw i32 %add240, 128
  %mul242 = mul nsw i32 %mul241, 128
  %110 = load i32, i32* %j, align 4
  %add243 = add nsw i32 %110, 1
  %mul244 = mul nsw i32 %add243, 128
  %add245 = add nsw i32 %mul242, %mul244
  %111 = load i32, i32* %k, align 4
  %add246 = add nsw i32 %add245, %111
  %add247 = add nsw i32 %add246, 1
  %idxprom248 = sext i32 %add247 to i64
  %arrayidx249 = getelementptr inbounds double, double* %108, i64 %idxprom248
  %112 = load double, double* %arrayidx249, align 8
  %add250 = fadd double %add239, %112
  %113 = load double*, double** %A.addr, align 8
  %114 = load i32, i32* %i, align 4
  %add251 = add nsw i32 %114, 1
  %mul252 = mul nsw i32 %add251, 128
  %mul253 = mul nsw i32 %mul252, 128
  %115 = load i32, i32* %j, align 4
  %add254 = add nsw i32 %115, 1
  %mul255 = mul nsw i32 %add254, 128
  %add256 = add nsw i32 %mul253, %mul255
  %116 = load i32, i32* %k, align 4
  %add257 = add nsw i32 %add256, %116
  %add258 = add nsw i32 %add257, 1
  %idxprom259 = sext i32 %add258 to i64
  %arrayidx260 = getelementptr inbounds double, double* %113, i64 %idxprom259
  store double %add250, double* %arrayidx260, align 8
  br label %for.inc261

for.inc261:                                       ; preds = %for.body138
  %117 = load i32, i32* %k, align 4
  %inc262 = add nsw i32 %117, 1
  store i32 %inc262, i32* %k, align 4
  br label %for.cond136

for.end263:                                       ; preds = %for.cond136
  br label %for.inc264

for.inc264:                                       ; preds = %for.end263
  %118 = load i32, i32* %j, align 4
  %inc265 = add nsw i32 %118, 1
  store i32 %inc265, i32* %j, align 4
  br label %for.cond133

for.end266:                                       ; preds = %for.cond133
  br label %for.inc267

for.inc267:                                       ; preds = %for.end266
  %119 = load i32, i32* %i, align 4
  %inc268 = add nsw i32 %119, 1
  store i32 %inc268, i32* %i, align 4
  br label %for.cond130

for.end269:                                       ; preds = %for.cond130
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
