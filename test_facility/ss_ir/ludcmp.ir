; ModuleID = './ss_bc/ludcmp.bc'
source_filename = "./ss_src/ludcmp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define void @ludcmp(double* %A, double* %b, double* %y, double* %x) #0 {
entry:
  %A.addr = alloca double*, align 8
  %b.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  %x.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %w = alloca double, align 8
  store double* %A, double** %A.addr, align 8
  store double* %b, double** %b.addr, align 8
  store double* %y, double** %y.addr, align 8
  store double* %x, double** %x.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc57, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 1024
  br i1 %cmp, label %for.body, label %for.end59

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc24, %for.body
  %1 = load i32, i32* %j, align 4
  %2 = load i32, i32* %i, align 4
  %cmp2 = icmp slt i32 %1, %2
  br i1 %cmp2, label %for.body3, label %for.end26

for.body3:                                        ; preds = %for.cond1
  %3 = load double*, double** %A.addr, align 8
  %4 = load i32, i32* %i, align 4
  %mul = mul nsw i32 %4, 1024
  %5 = load i32, i32* %j, align 4
  %add = add nsw i32 %mul, %5
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %6 = load double, double* %arrayidx, align 8
  store double %6, double* %w, align 8
  store i32 0, i32* %k, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc, %for.body3
  %7 = load i32, i32* %k, align 4
  %8 = load i32, i32* %j, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %A.addr, align 8
  %10 = load i32, i32* %i, align 4
  %mul7 = mul nsw i32 %10, 1024
  %11 = load i32, i32* %k, align 4
  %add8 = add nsw i32 %mul7, %11
  %idxprom9 = sext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds double, double* %9, i64 %idxprom9
  %12 = load double, double* %arrayidx10, align 8
  %13 = load double*, double** %A.addr, align 8
  %14 = load i32, i32* %k, align 4
  %mul11 = mul nsw i32 %14, 1024
  %15 = load i32, i32* %j, align 4
  %add12 = add nsw i32 %mul11, %15
  %idxprom13 = sext i32 %add12 to i64
  %arrayidx14 = getelementptr inbounds double, double* %13, i64 %idxprom13
  %16 = load double, double* %arrayidx14, align 8
  %mul15 = fmul double %12, %16
  %17 = load double, double* %w, align 8
  %sub = fsub double %17, %mul15
  store double %sub, double* %w, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body6
  %18 = load i32, i32* %k, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond4

for.end:                                          ; preds = %for.cond4
  %19 = load double, double* %w, align 8
  %20 = load double*, double** %A.addr, align 8
  %21 = load i32, i32* %j, align 4
  %mul16 = mul nsw i32 %21, 1024
  %22 = load i32, i32* %j, align 4
  %add17 = add nsw i32 %mul16, %22
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds double, double* %20, i64 %idxprom18
  %23 = load double, double* %arrayidx19, align 8
  %div = fdiv double %19, %23
  %24 = load double*, double** %A.addr, align 8
  %25 = load i32, i32* %i, align 4
  %mul20 = mul nsw i32 %25, 1024
  %26 = load i32, i32* %j, align 4
  %add21 = add nsw i32 %mul20, %26
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds double, double* %24, i64 %idxprom22
  store double %div, double* %arrayidx23, align 8
  br label %for.inc24

for.inc24:                                        ; preds = %for.end
  %27 = load i32, i32* %j, align 4
  %inc25 = add nsw i32 %27, 1
  store i32 %inc25, i32* %j, align 4
  br label %for.cond1

for.end26:                                        ; preds = %for.cond1
  %28 = load i32, i32* %i, align 4
  store i32 %28, i32* %j, align 4
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc54, %for.end26
  %29 = load i32, i32* %j, align 4
  %cmp28 = icmp slt i32 %29, 1024
  br i1 %cmp28, label %for.body29, label %for.end56

for.body29:                                       ; preds = %for.cond27
  %30 = load double*, double** %A.addr, align 8
  %31 = load i32, i32* %i, align 4
  %mul30 = mul nsw i32 %31, 1024
  %32 = load i32, i32* %j, align 4
  %add31 = add nsw i32 %mul30, %32
  %idxprom32 = sext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds double, double* %30, i64 %idxprom32
  %33 = load double, double* %arrayidx33, align 8
  store double %33, double* %w, align 8
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc47, %for.body29
  %34 = load i32, i32* %k, align 4
  %35 = load i32, i32* %i, align 4
  %cmp35 = icmp slt i32 %34, %35
  br i1 %cmp35, label %for.body36, label %for.end49

for.body36:                                       ; preds = %for.cond34
  %36 = load double*, double** %A.addr, align 8
  %37 = load i32, i32* %i, align 4
  %mul37 = mul nsw i32 %37, 1024
  %38 = load i32, i32* %k, align 4
  %add38 = add nsw i32 %mul37, %38
  %idxprom39 = sext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds double, double* %36, i64 %idxprom39
  %39 = load double, double* %arrayidx40, align 8
  %40 = load double*, double** %A.addr, align 8
  %41 = load i32, i32* %k, align 4
  %mul41 = mul nsw i32 %41, 1024
  %42 = load i32, i32* %j, align 4
  %add42 = add nsw i32 %mul41, %42
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds double, double* %40, i64 %idxprom43
  %43 = load double, double* %arrayidx44, align 8
  %mul45 = fmul double %39, %43
  %44 = load double, double* %w, align 8
  %sub46 = fsub double %44, %mul45
  store double %sub46, double* %w, align 8
  br label %for.inc47

for.inc47:                                        ; preds = %for.body36
  %45 = load i32, i32* %k, align 4
  %inc48 = add nsw i32 %45, 1
  store i32 %inc48, i32* %k, align 4
  br label %for.cond34

for.end49:                                        ; preds = %for.cond34
  %46 = load double, double* %w, align 8
  %47 = load double*, double** %A.addr, align 8
  %48 = load i32, i32* %i, align 4
  %mul50 = mul nsw i32 %48, 1024
  %49 = load i32, i32* %j, align 4
  %add51 = add nsw i32 %mul50, %49
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds double, double* %47, i64 %idxprom52
  store double %46, double* %arrayidx53, align 8
  br label %for.inc54

for.inc54:                                        ; preds = %for.end49
  %50 = load i32, i32* %j, align 4
  %inc55 = add nsw i32 %50, 1
  store i32 %inc55, i32* %j, align 4
  br label %for.cond27

for.end56:                                        ; preds = %for.cond27
  br label %for.inc57

for.inc57:                                        ; preds = %for.end56
  %51 = load i32, i32* %i, align 4
  %inc58 = add nsw i32 %51, 1
  store i32 %inc58, i32* %i, align 4
  br label %for.cond

for.end59:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond60

for.cond60:                                       ; preds = %for.inc81, %for.end59
  %52 = load i32, i32* %i, align 4
  %cmp61 = icmp slt i32 %52, 1024
  br i1 %cmp61, label %for.body62, label %for.end83

for.body62:                                       ; preds = %for.cond60
  %53 = load double*, double** %b.addr, align 8
  %54 = load i32, i32* %i, align 4
  %idxprom63 = sext i32 %54 to i64
  %arrayidx64 = getelementptr inbounds double, double* %53, i64 %idxprom63
  %55 = load double, double* %arrayidx64, align 8
  store double %55, double* %w, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond65

for.cond65:                                       ; preds = %for.inc76, %for.body62
  %56 = load i32, i32* %j, align 4
  %57 = load i32, i32* %i, align 4
  %cmp66 = icmp slt i32 %56, %57
  br i1 %cmp66, label %for.body67, label %for.end78

for.body67:                                       ; preds = %for.cond65
  %58 = load double*, double** %A.addr, align 8
  %59 = load i32, i32* %i, align 4
  %mul68 = mul nsw i32 %59, 1024
  %60 = load i32, i32* %j, align 4
  %add69 = add nsw i32 %mul68, %60
  %idxprom70 = sext i32 %add69 to i64
  %arrayidx71 = getelementptr inbounds double, double* %58, i64 %idxprom70
  %61 = load double, double* %arrayidx71, align 8
  %62 = load double*, double** %y.addr, align 8
  %63 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %63 to i64
  %arrayidx73 = getelementptr inbounds double, double* %62, i64 %idxprom72
  %64 = load double, double* %arrayidx73, align 8
  %mul74 = fmul double %61, %64
  %65 = load double, double* %w, align 8
  %sub75 = fsub double %65, %mul74
  store double %sub75, double* %w, align 8
  br label %for.inc76

for.inc76:                                        ; preds = %for.body67
  %66 = load i32, i32* %j, align 4
  %inc77 = add nsw i32 %66, 1
  store i32 %inc77, i32* %j, align 4
  br label %for.cond65

for.end78:                                        ; preds = %for.cond65
  %67 = load double, double* %w, align 8
  %68 = load double*, double** %y.addr, align 8
  %69 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %69 to i64
  %arrayidx80 = getelementptr inbounds double, double* %68, i64 %idxprom79
  store double %67, double* %arrayidx80, align 8
  br label %for.inc81

for.inc81:                                        ; preds = %for.end78
  %70 = load i32, i32* %i, align 4
  %inc82 = add nsw i32 %70, 1
  store i32 %inc82, i32* %i, align 4
  br label %for.cond60

for.end83:                                        ; preds = %for.cond60
  store i32 1023, i32* %i, align 4
  br label %for.cond84

for.cond84:                                       ; preds = %for.inc111, %for.end83
  %71 = load i32, i32* %i, align 4
  %cmp85 = icmp sge i32 %71, 0
  br i1 %cmp85, label %for.body86, label %for.end112

for.body86:                                       ; preds = %for.cond84
  %72 = load double*, double** %y.addr, align 8
  %73 = load i32, i32* %i, align 4
  %idxprom87 = sext i32 %73 to i64
  %arrayidx88 = getelementptr inbounds double, double* %72, i64 %idxprom87
  %74 = load double, double* %arrayidx88, align 8
  store double %74, double* %w, align 8
  %75 = load i32, i32* %i, align 4
  %add89 = add nsw i32 %75, 1
  store i32 %add89, i32* %j, align 4
  br label %for.cond90

for.cond90:                                       ; preds = %for.inc101, %for.body86
  %76 = load i32, i32* %j, align 4
  %cmp91 = icmp slt i32 %76, 1024
  br i1 %cmp91, label %for.body92, label %for.end103

for.body92:                                       ; preds = %for.cond90
  %77 = load double*, double** %A.addr, align 8
  %78 = load i32, i32* %i, align 4
  %mul93 = mul nsw i32 %78, 1024
  %79 = load i32, i32* %j, align 4
  %add94 = add nsw i32 %mul93, %79
  %idxprom95 = sext i32 %add94 to i64
  %arrayidx96 = getelementptr inbounds double, double* %77, i64 %idxprom95
  %80 = load double, double* %arrayidx96, align 8
  %81 = load double*, double** %x.addr, align 8
  %82 = load i32, i32* %j, align 4
  %idxprom97 = sext i32 %82 to i64
  %arrayidx98 = getelementptr inbounds double, double* %81, i64 %idxprom97
  %83 = load double, double* %arrayidx98, align 8
  %mul99 = fmul double %80, %83
  %84 = load double, double* %w, align 8
  %sub100 = fsub double %84, %mul99
  store double %sub100, double* %w, align 8
  br label %for.inc101

for.inc101:                                       ; preds = %for.body92
  %85 = load i32, i32* %j, align 4
  %inc102 = add nsw i32 %85, 1
  store i32 %inc102, i32* %j, align 4
  br label %for.cond90

for.end103:                                       ; preds = %for.cond90
  %86 = load double, double* %w, align 8
  %87 = load double*, double** %A.addr, align 8
  %88 = load i32, i32* %i, align 4
  %mul104 = mul nsw i32 %88, 1024
  %89 = load i32, i32* %i, align 4
  %add105 = add nsw i32 %mul104, %89
  %idxprom106 = sext i32 %add105 to i64
  %arrayidx107 = getelementptr inbounds double, double* %87, i64 %idxprom106
  %90 = load double, double* %arrayidx107, align 8
  %div108 = fdiv double %86, %90
  %91 = load double*, double** %x.addr, align 8
  %92 = load i32, i32* %i, align 4
  %idxprom109 = sext i32 %92 to i64
  %arrayidx110 = getelementptr inbounds double, double* %91, i64 %idxprom109
  store double %div108, double* %arrayidx110, align 8
  br label %for.inc111

for.inc111:                                       ; preds = %for.end103
  %93 = load i32, i32* %i, align 4
  %dec = add nsw i32 %93, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond84

for.end112:                                       ; preds = %for.cond84
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
