; ModuleID = './ss_bc/atax.bc'
source_filename = "./ss_src/atax.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @atax(i32 %nx, i32 %ny, double* %A, double* %x, double* %y, double* %tmp) #0 {
entry:
  %nx.addr = alloca i32, align 4
  %ny.addr = alloca i32, align 4
  %A.addr = alloca double*, align 8
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  %tmp.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %nx, i32* %nx.addr, align 4
  store i32 %ny, i32* %ny.addr, align 4
  store double* %A, double** %A.addr, align 8
  store double* %x, double** %x.addr, align 8
  store double* %y, double** %y.addr, align 8
  store double* %tmp, double** %tmp.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 8192
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load double*, double** %y.addr, align 8
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds double, double* %1, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc22, %for.end
  %4 = load i32, i32* %i, align 4
  %cmp2 = icmp slt i32 %4, 8192
  br i1 %cmp2, label %for.body3, label %for.end24

for.body3:                                        ; preds = %for.cond1
  %5 = load double*, double** %tmp.addr, align 8
  %6 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds double, double* %5, i64 %idxprom4
  store double 0.000000e+00, double* %arrayidx5, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc19, %for.body3
  %7 = load i32, i32* %j, align 4
  %cmp7 = icmp slt i32 %7, 8192
  br i1 %cmp7, label %for.body8, label %for.end21

for.body8:                                        ; preds = %for.cond6
  %8 = load double*, double** %tmp.addr, align 8
  %9 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %9 to i64
  %arrayidx10 = getelementptr inbounds double, double* %8, i64 %idxprom9
  %10 = load double, double* %arrayidx10, align 8
  %11 = load double*, double** %A.addr, align 8
  %12 = load i32, i32* %i, align 4
  %mul = mul nsw i32 %12, 8192
  %13 = load i32, i32* %j, align 4
  %add = add nsw i32 %mul, %13
  %idxprom11 = sext i32 %add to i64
  %arrayidx12 = getelementptr inbounds double, double* %11, i64 %idxprom11
  %14 = load double, double* %arrayidx12, align 8
  %15 = load double*, double** %x.addr, align 8
  %16 = load i32, i32* %j, align 4
  %idxprom13 = sext i32 %16 to i64
  %arrayidx14 = getelementptr inbounds double, double* %15, i64 %idxprom13
  %17 = load double, double* %arrayidx14, align 8
  %mul15 = fmul double %14, %17
  %add16 = fadd double %10, %mul15
  %18 = load double*, double** %tmp.addr, align 8
  %19 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %19 to i64
  %arrayidx18 = getelementptr inbounds double, double* %18, i64 %idxprom17
  store double %add16, double* %arrayidx18, align 8
  br label %for.inc19

for.inc19:                                        ; preds = %for.body8
  %20 = load i32, i32* %j, align 4
  %inc20 = add nsw i32 %20, 1
  store i32 %inc20, i32* %j, align 4
  br label %for.cond6

for.end21:                                        ; preds = %for.cond6
  br label %for.inc22

for.inc22:                                        ; preds = %for.end21
  %21 = load i32, i32* %i, align 4
  %inc23 = add nsw i32 %21, 1
  store i32 %inc23, i32* %i, align 4
  br label %for.cond1

for.end24:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc46, %for.end24
  %22 = load i32, i32* %i, align 4
  %cmp26 = icmp slt i32 %22, 8192
  br i1 %cmp26, label %for.body27, label %for.end48

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc43, %for.body27
  %23 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %23, 8192
  br i1 %cmp29, label %for.body30, label %for.end45

for.body30:                                       ; preds = %for.cond28
  %24 = load double*, double** %y.addr, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds double, double* %24, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %27 = load double*, double** %A.addr, align 8
  %28 = load i32, i32* %j, align 4
  %mul33 = mul nsw i32 %28, 8192
  %29 = load i32, i32* %i, align 4
  %add34 = add nsw i32 %mul33, %29
  %idxprom35 = sext i32 %add34 to i64
  %arrayidx36 = getelementptr inbounds double, double* %27, i64 %idxprom35
  %30 = load double, double* %arrayidx36, align 8
  %31 = load double*, double** %tmp.addr, align 8
  %32 = load i32, i32* %j, align 4
  %idxprom37 = sext i32 %32 to i64
  %arrayidx38 = getelementptr inbounds double, double* %31, i64 %idxprom37
  %33 = load double, double* %arrayidx38, align 8
  %mul39 = fmul double %30, %33
  %add40 = fadd double %26, %mul39
  %34 = load double*, double** %y.addr, align 8
  %35 = load i32, i32* %i, align 4
  %idxprom41 = sext i32 %35 to i64
  %arrayidx42 = getelementptr inbounds double, double* %34, i64 %idxprom41
  store double %add40, double* %arrayidx42, align 8
  br label %for.inc43

for.inc43:                                        ; preds = %for.body30
  %36 = load i32, i32* %j, align 4
  %inc44 = add nsw i32 %36, 1
  store i32 %inc44, i32* %j, align 4
  br label %for.cond28

for.end45:                                        ; preds = %for.cond28
  br label %for.inc46

for.inc46:                                        ; preds = %for.end45
  %37 = load i32, i32* %i, align 4
  %inc47 = add nsw i32 %37, 1
  store i32 %inc47, i32* %i, align 4
  br label %for.cond25

for.end48:                                        ; preds = %for.cond25
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 11.1.0 (https://github.com/llvm/llvm-project.git 0e442b077b9c6fe75076dc7e1cae5de1a693bc9b)"}
