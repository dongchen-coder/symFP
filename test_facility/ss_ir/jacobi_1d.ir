; ModuleID = './ss_bc/jacobi_1d.bc'
source_filename = "./ss_src/jacobi_1d.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define void @jacobi_1d(double* %A, double* %B) #0 {
entry:
  %A.addr = alloca double*, align 8
  %B.addr = alloca double*, align 8
  %t = alloca i32, align 4
  %i = alloca i32, align 4
  store double* %A, double** %A.addr, align 8
  store double* %B, double** %B.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 4094
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load double*, double** %A.addr, align 8
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds double, double* %1, i64 %idxprom
  %3 = load double, double* %arrayidx, align 8
  %4 = load double*, double** %A.addr, align 8
  %5 = load i32, i32* %i, align 4
  %add = add nsw i32 %5, 1
  %idxprom1 = sext i32 %add to i64
  %arrayidx2 = getelementptr inbounds double, double* %4, i64 %idxprom1
  %6 = load double, double* %arrayidx2, align 8
  %add3 = fadd double %3, %6
  %7 = load double*, double** %A.addr, align 8
  %8 = load i32, i32* %i, align 4
  %add4 = add nsw i32 %8, 2
  %idxprom5 = sext i32 %add4 to i64
  %arrayidx6 = getelementptr inbounds double, double* %7, i64 %idxprom5
  %9 = load double, double* %arrayidx6, align 8
  %add7 = fadd double %add3, %9
  %mul = fmul double 3.333300e-01, %add7
  %10 = load double*, double** %B.addr, align 8
  %11 = load i32, i32* %i, align 4
  %add8 = add nsw i32 %11, 1
  %idxprom9 = sext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds double, double* %10, i64 %idxprom9
  store double %mul, double* %arrayidx10, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc28, %for.end
  %13 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %13, 4094
  br i1 %cmp12, label %for.body13, label %for.end30

for.body13:                                       ; preds = %for.cond11
  %14 = load double*, double** %B.addr, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom14 = sext i32 %15 to i64
  %arrayidx15 = getelementptr inbounds double, double* %14, i64 %idxprom14
  %16 = load double, double* %arrayidx15, align 8
  %17 = load double*, double** %B.addr, align 8
  %18 = load i32, i32* %i, align 4
  %add16 = add nsw i32 %18, 1
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds double, double* %17, i64 %idxprom17
  %19 = load double, double* %arrayidx18, align 8
  %add19 = fadd double %16, %19
  %20 = load double*, double** %B.addr, align 8
  %21 = load i32, i32* %i, align 4
  %add20 = add nsw i32 %21, 2
  %idxprom21 = sext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds double, double* %20, i64 %idxprom21
  %22 = load double, double* %arrayidx22, align 8
  %add23 = fadd double %add19, %22
  %mul24 = fmul double 3.333300e-01, %add23
  %23 = load double*, double** %A.addr, align 8
  %24 = load i32, i32* %i, align 4
  %add25 = add nsw i32 %24, 1
  %idxprom26 = sext i32 %add25 to i64
  %arrayidx27 = getelementptr inbounds double, double* %23, i64 %idxprom26
  store double %mul24, double* %arrayidx27, align 8
  br label %for.inc28

for.inc28:                                        ; preds = %for.body13
  %25 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %25, 1
  store i32 %inc29, i32* %i, align 4
  br label %for.cond11

for.end30:                                        ; preds = %for.cond11
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
