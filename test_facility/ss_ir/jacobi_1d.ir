; ModuleID = './ss_bc/jacobi_1d.bc'
source_filename = "./ss_src/jacobi_1d.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define void @jacobi_1d(double* %A, double* %B) #0 {
entry:
  %A.addr = alloca double*, align 8
  %B.addr = alloca double*, align 8
  %t = alloca i32, align 4
  %i = alloca i32, align 4
  store double* %A, double** %A.addr, align 8
  store double* %B, double** %B.addr, align 8
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 1023
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load double*, double** %A.addr, align 8
  %2 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %2, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds double, double* %1, i64 %idxprom
  %3 = load double, double* %arrayidx, align 8
  %4 = load double*, double** %A.addr, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds double, double* %4, i64 %idxprom1
  %6 = load double, double* %arrayidx2, align 8
  %add = fadd double %3, %6
  %7 = load double*, double** %A.addr, align 8
  %8 = load i32, i32* %i, align 4
  %add3 = add nsw i32 %8, 1
  %idxprom4 = sext i32 %add3 to i64
  %arrayidx5 = getelementptr inbounds double, double* %7, i64 %idxprom4
  %9 = load double, double* %arrayidx5, align 8
  %add6 = fadd double %add, %9
  %mul = fmul double 3.333300e-01, %add6
  %10 = load double*, double** %B.addr, align 8
  %11 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %11 to i64
  %arrayidx8 = getelementptr inbounds double, double* %10, i64 %idxprom7
  store double %mul, double* %arrayidx8, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %i, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc25, %for.end
  %13 = load i32, i32* %i, align 4
  %cmp10 = icmp slt i32 %13, 1023
  br i1 %cmp10, label %for.body11, label %for.end27

for.body11:                                       ; preds = %for.cond9
  %14 = load double*, double** %B.addr, align 8
  %15 = load i32, i32* %i, align 4
  %sub12 = sub nsw i32 %15, 1
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr inbounds double, double* %14, i64 %idxprom13
  %16 = load double, double* %arrayidx14, align 8
  %17 = load double*, double** %B.addr, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %18 to i64
  %arrayidx16 = getelementptr inbounds double, double* %17, i64 %idxprom15
  %19 = load double, double* %arrayidx16, align 8
  %add17 = fadd double %16, %19
  %20 = load double*, double** %B.addr, align 8
  %21 = load i32, i32* %i, align 4
  %add18 = add nsw i32 %21, 1
  %idxprom19 = sext i32 %add18 to i64
  %arrayidx20 = getelementptr inbounds double, double* %20, i64 %idxprom19
  %22 = load double, double* %arrayidx20, align 8
  %add21 = fadd double %add17, %22
  %mul22 = fmul double 3.333300e-01, %add21
  %23 = load double*, double** %A.addr, align 8
  %24 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %24 to i64
  %arrayidx24 = getelementptr inbounds double, double* %23, i64 %idxprom23
  store double %mul22, double* %arrayidx24, align 8
  br label %for.inc25

for.inc25:                                        ; preds = %for.body11
  %25 = load i32, i32* %i, align 4
  %inc26 = add nsw i32 %25, 1
  store i32 %inc26, i32* %i, align 4
  br label %for.cond9

for.end27:                                        ; preds = %for.cond9
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
