; ModuleID = './ss_bc/adi.bc'
source_filename = "./ss_src/adi.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define void @adi(double* %p, double* %q, double* %v, double* %u) #0 {
entry:
  %p.addr = alloca double*, align 8
  %q.addr = alloca double*, align 8
  %v.addr = alloca double*, align 8
  %u.addr = alloca double*, align 8
  %t = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %DX = alloca double, align 8
  %DY = alloca double, align 8
  %DT = alloca double, align 8
  %B1 = alloca double, align 8
  %B2 = alloca double, align 8
  %mul1 = alloca double, align 8
  %mul2 = alloca double, align 8
  %a = alloca double, align 8
  %b = alloca double, align 8
  %c = alloca double, align 8
  %d = alloca double, align 8
  %e = alloca double, align 8
  %f = alloca double, align 8
  store double* %p, double** %p.addr, align 8
  store double* %q, double** %q.addr, align 8
  store double* %v, double** %v.addr, align 8
  store double* %u, double** %u.addr, align 8
  store double 0x3F50000000000000, double* %DX, align 8
  store double 0x3F50000000000000, double* %DY, align 8
  store double 1.000000e-01, double* %DT, align 8
  store double 2.000000e+00, double* %B1, align 8
  store double 1.000000e+00, double* %B2, align 8
  %0 = load double, double* %B1, align 8
  %1 = load double, double* %DT, align 8
  %mul = fmul double %0, %1
  %2 = load double, double* %DX, align 8
  %3 = load double, double* %DX, align 8
  %mul3 = fmul double %2, %3
  %div = fdiv double %mul, %mul3
  store double %div, double* %mul1, align 8
  %4 = load double, double* %B2, align 8
  %5 = load double, double* %DT, align 8
  %mul4 = fmul double %4, %5
  %6 = load double, double* %DY, align 8
  %7 = load double, double* %DY, align 8
  %mul5 = fmul double %6, %7
  %div6 = fdiv double %mul4, %mul5
  store double %div6, double* %mul2, align 8
  %8 = load double, double* %mul1, align 8
  %sub = fsub double -0.000000e+00, %8
  %div7 = fdiv double %sub, 2.000000e+00
  store double %div7, double* %a, align 8
  %9 = load double, double* %mul1, align 8
  %add = fadd double 1.000000e+00, %9
  store double %add, double* %b, align 8
  %10 = load double, double* %a, align 8
  store double %10, double* %c, align 8
  %11 = load double, double* %mul2, align 8
  %sub8 = fsub double -0.000000e+00, %11
  %div9 = fdiv double %sub8, 2.000000e+00
  store double %div9, double* %d, align 8
  %12 = load double, double* %mul2, align 8
  %add10 = fadd double 1.000000e+00, %12
  store double %add10, double* %e, align 8
  %13 = load double, double* %d, align 8
  store double %13, double* %f, align 8
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc107, %entry
  %14 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %14, 1023
  br i1 %cmp, label %for.body, label %for.end109

for.body:                                         ; preds = %for.cond
  %15 = load double*, double** %v.addr, align 8
  %16 = load i32, i32* %i, align 4
  %add11 = add nsw i32 0, %16
  %idxprom = sext i32 %add11 to i64
  %arrayidx = getelementptr inbounds double, double* %15, i64 %idxprom
  store double 1.000000e+00, double* %arrayidx, align 8
  %17 = load double*, double** %p.addr, align 8
  %18 = load i32, i32* %i, align 4
  %mul12 = mul nsw i32 %18, 1024
  %add13 = add nsw i32 %mul12, 0
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds double, double* %17, i64 %idxprom14
  store double 0.000000e+00, double* %arrayidx15, align 8
  %19 = load double*, double** %v.addr, align 8
  %20 = load i32, i32* %i, align 4
  %add16 = add nsw i32 0, %20
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds double, double* %19, i64 %idxprom17
  %21 = load double, double* %arrayidx18, align 8
  %22 = load double*, double** %q.addr, align 8
  %23 = load i32, i32* %i, align 4
  %mul19 = mul nsw i32 %23, 1024
  %add20 = add nsw i32 %mul19, 0
  %idxprom21 = sext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds double, double* %22, i64 %idxprom21
  store double %21, double* %arrayidx22, align 8
  store i32 1, i32* %j, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc, %for.body
  %24 = load i32, i32* %j, align 4
  %cmp24 = icmp slt i32 %24, 1023
  br i1 %cmp24, label %for.body25, label %for.end

for.body25:                                       ; preds = %for.cond23
  %25 = load double, double* %c, align 8
  %sub26 = fsub double -0.000000e+00, %25
  %26 = load double, double* %a, align 8
  %27 = load double*, double** %p.addr, align 8
  %28 = load i32, i32* %i, align 4
  %mul27 = mul nsw i32 %28, 1024
  %29 = load i32, i32* %j, align 4
  %add28 = add nsw i32 %mul27, %29
  %sub29 = sub nsw i32 %add28, 1
  %idxprom30 = sext i32 %sub29 to i64
  %arrayidx31 = getelementptr inbounds double, double* %27, i64 %idxprom30
  %30 = load double, double* %arrayidx31, align 8
  %mul32 = fmul double %26, %30
  %31 = load double, double* %b, align 8
  %add33 = fadd double %mul32, %31
  %div34 = fdiv double %sub26, %add33
  %32 = load double*, double** %p.addr, align 8
  %33 = load i32, i32* %i, align 4
  %mul35 = mul nsw i32 %33, 1024
  %34 = load i32, i32* %j, align 4
  %add36 = add nsw i32 %mul35, %34
  %idxprom37 = sext i32 %add36 to i64
  %arrayidx38 = getelementptr inbounds double, double* %32, i64 %idxprom37
  store double %div34, double* %arrayidx38, align 8
  %35 = load double, double* %d, align 8
  %sub39 = fsub double -0.000000e+00, %35
  %36 = load double*, double** %u.addr, align 8
  %37 = load i32, i32* %j, align 4
  %mul40 = mul nsw i32 %37, 1024
  %38 = load i32, i32* %i, align 4
  %add41 = add nsw i32 %mul40, %38
  %sub42 = sub nsw i32 %add41, 1
  %idxprom43 = sext i32 %sub42 to i64
  %arrayidx44 = getelementptr inbounds double, double* %36, i64 %idxprom43
  %39 = load double, double* %arrayidx44, align 8
  %mul45 = fmul double %sub39, %39
  %40 = load double, double* %d, align 8
  %mul46 = fmul double 2.000000e+00, %40
  %add47 = fadd double 1.000000e+00, %mul46
  %41 = load double*, double** %u.addr, align 8
  %42 = load i32, i32* %j, align 4
  %mul48 = mul nsw i32 %42, 1024
  %43 = load i32, i32* %i, align 4
  %add49 = add nsw i32 %mul48, %43
  %idxprom50 = sext i32 %add49 to i64
  %arrayidx51 = getelementptr inbounds double, double* %41, i64 %idxprom50
  %44 = load double, double* %arrayidx51, align 8
  %mul52 = fmul double %add47, %44
  %add53 = fadd double %mul45, %mul52
  %45 = load double, double* %f, align 8
  %46 = load double*, double** %u.addr, align 8
  %47 = load i32, i32* %j, align 4
  %mul54 = mul nsw i32 %47, 1024
  %48 = load i32, i32* %i, align 4
  %add55 = add nsw i32 %mul54, %48
  %add56 = add nsw i32 %add55, 1
  %idxprom57 = sext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds double, double* %46, i64 %idxprom57
  %49 = load double, double* %arrayidx58, align 8
  %mul59 = fmul double %45, %49
  %sub60 = fsub double %add53, %mul59
  %50 = load double, double* %a, align 8
  %51 = load double*, double** %q.addr, align 8
  %52 = load i32, i32* %i, align 4
  %mul61 = mul nsw i32 %52, 1024
  %53 = load i32, i32* %j, align 4
  %add62 = add nsw i32 %mul61, %53
  %sub63 = sub nsw i32 %add62, 1
  %idxprom64 = sext i32 %sub63 to i64
  %arrayidx65 = getelementptr inbounds double, double* %51, i64 %idxprom64
  %54 = load double, double* %arrayidx65, align 8
  %mul66 = fmul double %50, %54
  %sub67 = fsub double %sub60, %mul66
  %55 = load double, double* %a, align 8
  %56 = load double*, double** %p.addr, align 8
  %57 = load i32, i32* %i, align 4
  %mul68 = mul nsw i32 %57, 1024
  %58 = load i32, i32* %j, align 4
  %add69 = add nsw i32 %mul68, %58
  %sub70 = sub nsw i32 %add69, 1
  %idxprom71 = sext i32 %sub70 to i64
  %arrayidx72 = getelementptr inbounds double, double* %56, i64 %idxprom71
  %59 = load double, double* %arrayidx72, align 8
  %mul73 = fmul double %55, %59
  %60 = load double, double* %b, align 8
  %add74 = fadd double %mul73, %60
  %div75 = fdiv double %sub67, %add74
  %61 = load double*, double** %q.addr, align 8
  %62 = load i32, i32* %i, align 4
  %mul76 = mul nsw i32 %62, 1024
  %63 = load i32, i32* %j, align 4
  %add77 = add nsw i32 %mul76, %63
  %idxprom78 = sext i32 %add77 to i64
  %arrayidx79 = getelementptr inbounds double, double* %61, i64 %idxprom78
  store double %div75, double* %arrayidx79, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body25
  %64 = load i32, i32* %j, align 4
  %inc = add nsw i32 %64, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond23

for.end:                                          ; preds = %for.cond23
  %65 = load double*, double** %v.addr, align 8
  %66 = load i32, i32* %i, align 4
  %add80 = add nsw i32 1047552, %66
  %idxprom81 = sext i32 %add80 to i64
  %arrayidx82 = getelementptr inbounds double, double* %65, i64 %idxprom81
  store double 1.000000e+00, double* %arrayidx82, align 8
  store i32 1022, i32* %j, align 4
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc105, %for.end
  %67 = load i32, i32* %j, align 4
  %cmp84 = icmp sge i32 %67, 1
  br i1 %cmp84, label %for.body85, label %for.end106

for.body85:                                       ; preds = %for.cond83
  %68 = load double*, double** %p.addr, align 8
  %69 = load i32, i32* %i, align 4
  %mul86 = mul nsw i32 %69, 1024
  %70 = load i32, i32* %j, align 4
  %add87 = add nsw i32 %mul86, %70
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds double, double* %68, i64 %idxprom88
  %71 = load double, double* %arrayidx89, align 8
  %72 = load double*, double** %v.addr, align 8
  %73 = load i32, i32* %j, align 4
  %add90 = add nsw i32 %73, 1
  %mul91 = mul nsw i32 %add90, 1024
  %74 = load i32, i32* %i, align 4
  %add92 = add nsw i32 %mul91, %74
  %idxprom93 = sext i32 %add92 to i64
  %arrayidx94 = getelementptr inbounds double, double* %72, i64 %idxprom93
  %75 = load double, double* %arrayidx94, align 8
  %mul95 = fmul double %71, %75
  %76 = load double*, double** %q.addr, align 8
  %77 = load i32, i32* %i, align 4
  %mul96 = mul nsw i32 %77, 1024
  %78 = load i32, i32* %j, align 4
  %add97 = add nsw i32 %mul96, %78
  %idxprom98 = sext i32 %add97 to i64
  %arrayidx99 = getelementptr inbounds double, double* %76, i64 %idxprom98
  %79 = load double, double* %arrayidx99, align 8
  %add100 = fadd double %mul95, %79
  %80 = load double*, double** %v.addr, align 8
  %81 = load i32, i32* %j, align 4
  %mul101 = mul nsw i32 %81, 1024
  %82 = load i32, i32* %i, align 4
  %add102 = add nsw i32 %mul101, %82
  %idxprom103 = sext i32 %add102 to i64
  %arrayidx104 = getelementptr inbounds double, double* %80, i64 %idxprom103
  store double %add100, double* %arrayidx104, align 8
  br label %for.inc105

for.inc105:                                       ; preds = %for.body85
  %83 = load i32, i32* %j, align 4
  %dec = add nsw i32 %83, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond83

for.end106:                                       ; preds = %for.cond83
  br label %for.inc107

for.inc107:                                       ; preds = %for.end106
  %84 = load i32, i32* %i, align 4
  %inc108 = add nsw i32 %84, 1
  store i32 %inc108, i32* %i, align 4
  br label %for.cond

for.end109:                                       ; preds = %for.cond
  store i32 1, i32* %i, align 4
  br label %for.cond110

for.cond110:                                      ; preds = %for.inc219, %for.end109
  %85 = load i32, i32* %i, align 4
  %cmp111 = icmp slt i32 %85, 1023
  br i1 %cmp111, label %for.body112, label %for.end221

for.body112:                                      ; preds = %for.cond110
  %86 = load double*, double** %u.addr, align 8
  %87 = load i32, i32* %i, align 4
  %mul113 = mul nsw i32 %87, 1024
  %add114 = add nsw i32 %mul113, 0
  %idxprom115 = sext i32 %add114 to i64
  %arrayidx116 = getelementptr inbounds double, double* %86, i64 %idxprom115
  store double 1.000000e+00, double* %arrayidx116, align 8
  %88 = load double*, double** %p.addr, align 8
  %89 = load i32, i32* %i, align 4
  %mul117 = mul nsw i32 %89, 1024
  %add118 = add nsw i32 %mul117, 0
  %idxprom119 = sext i32 %add118 to i64
  %arrayidx120 = getelementptr inbounds double, double* %88, i64 %idxprom119
  store double 0.000000e+00, double* %arrayidx120, align 8
  %90 = load double*, double** %u.addr, align 8
  %91 = load i32, i32* %i, align 4
  %mul121 = mul nsw i32 %91, 1024
  %add122 = add nsw i32 %mul121, 0
  %idxprom123 = sext i32 %add122 to i64
  %arrayidx124 = getelementptr inbounds double, double* %90, i64 %idxprom123
  %92 = load double, double* %arrayidx124, align 8
  %93 = load double*, double** %q.addr, align 8
  %94 = load i32, i32* %i, align 4
  %mul125 = mul nsw i32 %94, 1024
  %add126 = add nsw i32 %mul125, 0
  %idxprom127 = sext i32 %add126 to i64
  %arrayidx128 = getelementptr inbounds double, double* %93, i64 %idxprom127
  store double %92, double* %arrayidx128, align 8
  store i32 1, i32* %j, align 4
  br label %for.cond129

for.cond129:                                      ; preds = %for.inc186, %for.body112
  %95 = load i32, i32* %j, align 4
  %cmp130 = icmp slt i32 %95, 1023
  br i1 %cmp130, label %for.body131, label %for.end188

for.body131:                                      ; preds = %for.cond129
  %96 = load double, double* %f, align 8
  %sub132 = fsub double -0.000000e+00, %96
  %97 = load double, double* %d, align 8
  %98 = load double*, double** %p.addr, align 8
  %99 = load i32, i32* %i, align 4
  %mul133 = mul nsw i32 %99, 1024
  %100 = load i32, i32* %j, align 4
  %add134 = add nsw i32 %mul133, %100
  %sub135 = sub nsw i32 %add134, 1
  %idxprom136 = sext i32 %sub135 to i64
  %arrayidx137 = getelementptr inbounds double, double* %98, i64 %idxprom136
  %101 = load double, double* %arrayidx137, align 8
  %mul138 = fmul double %97, %101
  %102 = load double, double* %e, align 8
  %add139 = fadd double %mul138, %102
  %div140 = fdiv double %sub132, %add139
  %103 = load double*, double** %p.addr, align 8
  %104 = load i32, i32* %i, align 4
  %mul141 = mul nsw i32 %104, 1024
  %105 = load i32, i32* %j, align 4
  %add142 = add nsw i32 %mul141, %105
  %idxprom143 = sext i32 %add142 to i64
  %arrayidx144 = getelementptr inbounds double, double* %103, i64 %idxprom143
  store double %div140, double* %arrayidx144, align 8
  %106 = load double, double* %a, align 8
  %sub145 = fsub double -0.000000e+00, %106
  %107 = load double*, double** %v.addr, align 8
  %108 = load i32, i32* %i, align 4
  %sub146 = sub nsw i32 %108, 1
  %mul147 = mul nsw i32 %sub146, 1024
  %109 = load i32, i32* %j, align 4
  %add148 = add nsw i32 %mul147, %109
  %idxprom149 = sext i32 %add148 to i64
  %arrayidx150 = getelementptr inbounds double, double* %107, i64 %idxprom149
  %110 = load double, double* %arrayidx150, align 8
  %mul151 = fmul double %sub145, %110
  %111 = load double, double* %a, align 8
  %mul152 = fmul double 2.000000e+00, %111
  %add153 = fadd double 1.000000e+00, %mul152
  %112 = load double*, double** %v.addr, align 8
  %113 = load i32, i32* %i, align 4
  %mul154 = mul nsw i32 %113, 1024
  %114 = load i32, i32* %j, align 4
  %add155 = add nsw i32 %mul154, %114
  %idxprom156 = sext i32 %add155 to i64
  %arrayidx157 = getelementptr inbounds double, double* %112, i64 %idxprom156
  %115 = load double, double* %arrayidx157, align 8
  %mul158 = fmul double %add153, %115
  %add159 = fadd double %mul151, %mul158
  %116 = load double, double* %c, align 8
  %117 = load double*, double** %v.addr, align 8
  %118 = load i32, i32* %i, align 4
  %add160 = add nsw i32 %118, 1
  %mul161 = mul nsw i32 %add160, 1024
  %119 = load i32, i32* %j, align 4
  %add162 = add nsw i32 %mul161, %119
  %idxprom163 = sext i32 %add162 to i64
  %arrayidx164 = getelementptr inbounds double, double* %117, i64 %idxprom163
  %120 = load double, double* %arrayidx164, align 8
  %mul165 = fmul double %116, %120
  %sub166 = fsub double %add159, %mul165
  %121 = load double, double* %d, align 8
  %122 = load double*, double** %q.addr, align 8
  %123 = load i32, i32* %i, align 4
  %mul167 = mul nsw i32 %123, 1024
  %124 = load i32, i32* %j, align 4
  %add168 = add nsw i32 %mul167, %124
  %sub169 = sub nsw i32 %add168, 1
  %idxprom170 = sext i32 %sub169 to i64
  %arrayidx171 = getelementptr inbounds double, double* %122, i64 %idxprom170
  %125 = load double, double* %arrayidx171, align 8
  %mul172 = fmul double %121, %125
  %sub173 = fsub double %sub166, %mul172
  %126 = load double, double* %d, align 8
  %127 = load double*, double** %p.addr, align 8
  %128 = load i32, i32* %i, align 4
  %mul174 = mul nsw i32 %128, 1024
  %129 = load i32, i32* %j, align 4
  %add175 = add nsw i32 %mul174, %129
  %sub176 = sub nsw i32 %add175, 1
  %idxprom177 = sext i32 %sub176 to i64
  %arrayidx178 = getelementptr inbounds double, double* %127, i64 %idxprom177
  %130 = load double, double* %arrayidx178, align 8
  %mul179 = fmul double %126, %130
  %131 = load double, double* %e, align 8
  %add180 = fadd double %mul179, %131
  %div181 = fdiv double %sub173, %add180
  %132 = load double*, double** %q.addr, align 8
  %133 = load i32, i32* %i, align 4
  %mul182 = mul nsw i32 %133, 1024
  %134 = load i32, i32* %j, align 4
  %add183 = add nsw i32 %mul182, %134
  %idxprom184 = sext i32 %add183 to i64
  %arrayidx185 = getelementptr inbounds double, double* %132, i64 %idxprom184
  store double %div181, double* %arrayidx185, align 8
  br label %for.inc186

for.inc186:                                       ; preds = %for.body131
  %135 = load i32, i32* %j, align 4
  %inc187 = add nsw i32 %135, 1
  store i32 %inc187, i32* %j, align 4
  br label %for.cond129

for.end188:                                       ; preds = %for.cond129
  %136 = load double*, double** %u.addr, align 8
  %137 = load i32, i32* %i, align 4
  %mul189 = mul nsw i32 %137, 1024
  %add190 = add nsw i32 %mul189, 1024
  %sub191 = sub nsw i32 %add190, 1
  %idxprom192 = sext i32 %sub191 to i64
  %arrayidx193 = getelementptr inbounds double, double* %136, i64 %idxprom192
  store double 1.000000e+00, double* %arrayidx193, align 8
  store i32 1022, i32* %j, align 4
  br label %for.cond194

for.cond194:                                      ; preds = %for.inc216, %for.end188
  %138 = load i32, i32* %j, align 4
  %cmp195 = icmp sge i32 %138, 1
  br i1 %cmp195, label %for.body196, label %for.end218

for.body196:                                      ; preds = %for.cond194
  %139 = load double*, double** %p.addr, align 8
  %140 = load i32, i32* %i, align 4
  %mul197 = mul nsw i32 %140, 1024
  %141 = load i32, i32* %j, align 4
  %add198 = add nsw i32 %mul197, %141
  %idxprom199 = sext i32 %add198 to i64
  %arrayidx200 = getelementptr inbounds double, double* %139, i64 %idxprom199
  %142 = load double, double* %arrayidx200, align 8
  %143 = load double*, double** %u.addr, align 8
  %144 = load i32, i32* %i, align 4
  %mul201 = mul nsw i32 %144, 1024
  %145 = load i32, i32* %j, align 4
  %add202 = add nsw i32 %mul201, %145
  %add203 = add nsw i32 %add202, 1
  %idxprom204 = sext i32 %add203 to i64
  %arrayidx205 = getelementptr inbounds double, double* %143, i64 %idxprom204
  %146 = load double, double* %arrayidx205, align 8
  %mul206 = fmul double %142, %146
  %147 = load double*, double** %q.addr, align 8
  %148 = load i32, i32* %i, align 4
  %mul207 = mul nsw i32 %148, 1024
  %149 = load i32, i32* %j, align 4
  %add208 = add nsw i32 %mul207, %149
  %idxprom209 = sext i32 %add208 to i64
  %arrayidx210 = getelementptr inbounds double, double* %147, i64 %idxprom209
  %150 = load double, double* %arrayidx210, align 8
  %add211 = fadd double %mul206, %150
  %151 = load double*, double** %u.addr, align 8
  %152 = load i32, i32* %i, align 4
  %mul212 = mul nsw i32 %152, 1024
  %153 = load i32, i32* %j, align 4
  %add213 = add nsw i32 %mul212, %153
  %idxprom214 = sext i32 %add213 to i64
  %arrayidx215 = getelementptr inbounds double, double* %151, i64 %idxprom214
  store double %add211, double* %arrayidx215, align 8
  br label %for.inc216

for.inc216:                                       ; preds = %for.body196
  %154 = load i32, i32* %j, align 4
  %dec217 = add nsw i32 %154, -1
  store i32 %dec217, i32* %j, align 4
  br label %for.cond194

for.end218:                                       ; preds = %for.cond194
  br label %for.inc219

for.inc219:                                       ; preds = %for.end218
  %155 = load i32, i32* %i, align 4
  %inc220 = add nsw i32 %155, 1
  store i32 %inc220, i32* %i, align 4
  br label %for.cond110

for.end221:                                       ; preds = %for.cond110
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
